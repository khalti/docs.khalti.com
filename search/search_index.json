{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#what-is-khalti-payment-gatewaykpg","title":"What is Khalti Payment Gateway(KPG)?","text":"<p>Khalti Payment Gateway (KPG) is a comprehensive payment solution, digital wallet, and API provider designed specifically for online services in Nepal. Whether you have a web application or a mobile application, integrating KPG enables you to seamlessly accept online payments. This documentation serves as your comprehensive guide through the integration process.</p> <p>By incorporating the KPG ePayment Gateway (for web) and SDKs (for mobile), you can accept payments from various sources:</p> <ol> <li>Khalti users.</li> <li>eBanking users of our partner banks.</li> <li>Mobile banking users of our mobile banking partner banks.</li> <li>SCT/VISA card holders.</li> <li>connectIPS users.</li> </ol> <p>Integration with Khalti Payment Gateway (KPG) streamlines the process of receiving online payments by eliminating the need to integrate individually with multiple banks.</p>"},{"location":"#features","title":"Features","text":""},{"location":"#for-consumers","title":"For consumers","text":"<ul> <li> <p>Multiple Payment Options: Provides various payment options for customers.</p> </li> <li> <p>Secured Transactions: Utilizes 2-step authentication (Khalti Pin and Khalti Password) for enhanced security.      Transaction processing is disabled after multiple incorrect pin attempts.</p> </li> </ul>"},{"location":"#for-merchants","title":"For merchants","text":"<ul> <li>Highly Secure and Easy Integrations: Offers seamless integration with strong security measures.</li> <li>SDK Availability: SDKs are available for Web Flutter and Android.</li> <li>Merchant Dashboard: Allows merchants to view transactions, issue refunds, filter and download reports, etc.</li> <li>Multi-User System: Supports multiple users within a single account.</li> <li>Real-Time Balance Updates: Provides real-time updates on balances in the Merchant Dashboard for every successful customer transaction.</li> <li>Flexibility in Fund Transfer: Amount collected in the Merchant Dashboard can be deposited or transferred to bank    accounts at any time.</li> </ul>"},{"location":"#support","title":"Support","text":"<p>For any inquiries regarding Khalti Payment Gateway, feel free to reach out to us through:</p> <ul> <li>Mobile (Viber / Whatsapp / Skype): 9801165557, 9801890085</li> <li>Email: merchant@khalti.com</li> </ul> <p>We are here to assist you with any questions or concerns you may have.</p>"},{"location":"contact-us/","title":"Contact Us","text":"<p>Contact Our Merchant Team</p> <ul> <li> <p>Mobile (Viber / Whatsapp):  9801165557</p> </li> <li> <p>Email: merchant@khalti.com</p> </li> </ul> <p>(To integrate Khalti to your business and other online platforms.)</p> <p>Contact Our Merchant Support</p> <ul> <li>Mobile (Viber / Whatsapp): 9801165557, 9801165565</li> <li>Email: merchantcare@khalti.com</li> </ul> <p>Contact Our Technical Team</p> <ul> <li> <p>Mobile (Viber / Whatsapp): 9801165557, 9801165565</p> </li> <li> <p>Email: merchant@khalti.com, techsupport@khalti.com (For payment gateway integration support.)</p> </li> </ul>"},{"location":"contribution/","title":"Contribution","text":""},{"location":"contribution/#introduction","title":"Introduction","text":"<p>Contributions are always welcome. Also, if you have any confusion, please feel free to create an issue.</p>"},{"location":"contribution/#key-information","title":"Key information","text":"<ul> <li>The documentation source files are inside <code>content/</code> directory.</li> <li>The source files are written in <code>Markdown</code>.</li> <li>The HTML documentation site is built using mkdocs,   a Python package to build documentation.</li> </ul>"},{"location":"contribution/#how-to-contribute","title":"How to contribute","text":""},{"location":"contribution/#fork-it-clone-it","title":"Fork it, clone it","text":"<p>Fork the docs repo by using the Github interface.</p> <p>Clone that fork into your development machine.</p> <pre><code>git clone git@github.com:&lt;YOUR_USERNAME&gt;/khalti-docs-official-repo.git\n</code></pre>"},{"location":"contribution/#locally-building-and-serving","title":"Locally building and serving","text":"<p>Install <code>mkdocs</code> using any of the methods specified in the official documentation.</p> <p>The current theme used for mkdocs is <code>material</code>. You will need to install the theme as well.</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>To serve the docs locally, run:</p> <pre><code>mkdocs serve\n</code></pre> <p>This will build and host the <code>.md</code> files in <code>http://localhost:8000</code>. It will also live reload the page when you make changes in the source files.</p>"},{"location":"contribution/#pushing-changes","title":"Pushing changes","text":"<p>Once you've made necessary changes, push it to your forked repository by running:</p> <pre><code>git push origin master\n</code></pre> <p>After you've done this, you need to ask us to merge your changes to the main repo. Github provides pull request feature to accomplish that.</p> <p>Go to the pull requests tab of the main repo.</p> <p>You'll notice a big green, New pull request button on the top right side of the page. Click on that button and follow from there. Your pull request will be reviewed and merged by one of Khalti development staff.</p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This document serves as a comprehensive guide to integrating the Khalti Payment Gateway (KPG) into your system. The integration process involves signing up as a merchant, understanding the integration methods for web and mobile, and transitioning to a live environment after successful testing.</p> <ul> <li>1. Signup as a Merchant in Khalti</li> <li>2. ePayment Gateway Integration <ul> <li>2.1. Web</li> <li>2.2. Mobile </li> </ul> </li> <li>3. Test Environment</li> <li>4. Going Live</li> </ul>"},{"location":"getting-started/#1-signup-as-a-merchant-in-khalti","title":"1. Signup as a Merchant in Khalti","text":"<p>Before proceeding with the integration, it's essential to understand the terms used throughout the documentation:</p> <ul> <li>Merchant : Online business services such as e-commerce websites, ISP online payment portals, or online movie ticket platforms seeking to receive online payments via KPG.</li> </ul> <p>If you're new to Khalti Payment Gateway service, familiarize yourself with its offerings by reading here  for a better understanding.</p> <p>To initiate the integration process, sign up  as a merchant account :</p> <ul> <li>Create a merchant account</li> </ul>"},{"location":"getting-started/#2-epayment-gateway-integration","title":"2. ePayment Gateway Integration","text":"<p>The integration process varies depending on whether you're integrating KPG on a web or mobile platform. Follow the steps outlined below accordingly:</p>"},{"location":"getting-started/#21-web-checkout","title":"2.1. Web Checkout","text":"<p>  The payment process flow of KPG Web Checkout is as follows: </p> <ol> <li>Merchant requests Khalti  to initiate the online payment. </li> <li>Khalti system returns with <code>pidx</code> and <code>payment_url</code>.</li> <li>The user must be redirected to <code>payment_url</code>.</li> <li>After payment, callback is received from Khalti system.</li> <li>Merchant side must hit the lookup API to get the status of the transaction.</li> </ol> <p>If you are looking to integrate KPG on web application, then the integration must be done by integrating the web checkout. Please follow the documentation here to proceed Web Checkout.</p> <p>Checkout provides all the necessary Uls and perform necessary processes to initiate and confirm the payment.</p>"},{"location":"getting-started/#22-mobile-checkout","title":"2.2. Mobile Checkout","text":"<p>The payment process flow of KPG SDK (Android &amp; Flutter) is as follows: </p> <ol> <li>Merchant requests Khalti  to initiate the online payment. </li> <li>Khalti system returns with <code>pidx</code> and <code>payment_url</code>.</li> <li>The merchant system must pass <code>pidx</code>, <code>keys</code> and <code>return URL</code> in client side SDK (Android and Flutter) for initiating the online payment.</li> <li> <p>After payment, the return message is obtained on the client side along with extra SDK offerings.</p> </li> <li> <p>Merchant side must hit the lookup API to get the status of the transaction.</p> </li> </ol> <p>Note</p> <p>The return url  must be same while generating PIDX and in SDK To get callback or SDK offering </p> <p>If you are looking to integrate KPG in mobile, then the integration must be done by integrating the provided SDKs. Please follow the documentation here to proceed:</p> <ul> <li>Android SDK</li> <li>Flutter SDK</li> </ul> <p>Checkout provides all the necessary Uls and perform necessary processes to initiate and confirm the payment.</p>"},{"location":"getting-started/#3-test-environment","title":"3. Test Environment","text":"<p>Access Information</p> <p>For Sandbox Access</p> <p>Signup from      here as a merchant.</p> <p>URL : https://dev.khalti.com/   Server Side Authorization Key :  Live secret key Client Side Authorization Key (Android / Flutter SDK): Live public key</p> <p>Test Credentials for sandbox environment</p> <p>Test Khalti ID for 9800000000 9800000001 9800000002 9800000003 9800000004 9800000005</p> <p>Test MPIN 1111</p> <p>Test OTP 987654</p> <p>Important</p> <p>Payment via E-Banking and Debit/Credit card is not supported in the test environment. However, after successful integration with KPG, this functionality will be enabled.</p>"},{"location":"getting-started/#4-going-live","title":"4. Going Live","text":"<p>After a successful integration test, a live merchant account must be created from here. The merchant must replace the Sandbox URL and authorization key with productions. Live keys will be generated in the merchant dashboard.</p> <p>Access Information</p> <p>For Production</p> <p>Signup from      here as a merchant.</p> <p>URL : https://khalti.com/   Server Side Authorization Key :  Live secret key Client Side Authorization Key (Android / Flutter SDK): Live public key   </p> <p>Important</p> <p>Even after successful integration, you won't be able to receive payments above NPR 200 per transaction. Fill the KYC form and contact us at 9801890085 / 9801856440 / 9801165558 / 9801165557 to remove the limits and accept payments without restrictions.</p>"},{"location":"gotchas/","title":"FAQ's","text":""},{"location":"gotchas/#1-how-can-i-sign-up-as-a-merchant","title":"1. How can I sign up as a merchant?","text":"<p>Please go this link  for a merchant sign up</p>"},{"location":"gotchas/#2-how-to-integrate-kpg","title":"2. How to integrate KPG?","text":"<p>Based on your requirement please visit following links for Khalti integration:</p> <ul> <li>Web integration</li> <li>Android integration</li> </ul> <ul> <li>Flutter integration</li> </ul> <ul> <li>Khalti integration via plugins<ul> <li>For WooCommerce</li> </ul> </li> </ul>"},{"location":"gotchas/#3-what-to-do-after-a-successful-test-transaction","title":"3. What to do after a successful test transaction ?","text":"<p>After a successful test transaction, you will able to accept payments live. However, before going live, please contact our team for the necessary coordination</p>"},{"location":"gotchas/#4-does-khalti-have-sdk-for-hybrid-apps","title":"4. Does Khalti have SDK for hybrid Apps?","text":"<p>We do have SDK for Flutter. But for hybrid apps based on other frameworks, we don't have a specific SDK.  Find options in <code>Client Integration</code>, which support Khalti checkout integration with your app.</p>"},{"location":"gotchas/#5-can-i-share-merchant-keys","title":"5. Can I share merchant keys?","text":"<p>Secret key must not be shared with anyone. Ensure it does not get leaked by any means. If you key got compromised you can regenerate new one from your merchant dashboard.</p>"},{"location":"gotchas/#6-what-is-khalti-mpin","title":"6. What is Khalti mPIN?","text":"<p>Khalti mPIN is the four digit pin, used by the user while making payment of third party transactions.</p> <p>It can created or changed at the Transaction Pin section under Account in khalti web and Settings in khalti app.</p>"},{"location":"gotchas/#7-i-need-to-refund-payment-to-the-user-how-can-i-refund-a-transaction","title":"7. I need to refund payment to the user. How can I refund a transaction?","text":"<p>You can refund the payment to the user from your dashboard.</p>"},{"location":"gotchas/#gotchas","title":"Gotchas","text":""},{"location":"gotchas/#cors-issues","title":"CORS issues","text":"<p>If you are getting CORS issues, read the docs again very thoroughly. You need to call verification API from your server to verify, so it is necessary to pass the data to your server first.</p>"},{"location":"gotchas/#server-errors","title":"Server errors","text":"<p>If you get error response \"Fee not found.\" while testing, check your fee and set fee between Rs. 10 to Rs. 200. If you are using live keys contact merchant support to find your transaction limits.</p>"},{"location":"gotchas/#payment-errors","title":"Payment errors","text":"<p>If you get error response \"Amount must be less than 200.\" while testing, check you have complete all the contract process. If you are using live keys contact merchant support for further details.</p>"},{"location":"gotchas/#frame-options-and-clickjacking-protection","title":"Frame Options and Clickjacking protection","text":"<p>Refused to display 'https://khalti.com/payment/widget/' in a frame because it set 'X-Frame-Options' to 'deny'.</p> <p>You are using HTTP response header 'X-Frame-Options' that avoids <code>&lt;iframe&gt;</code> rendering when you set it to 'deny'. But Khalti gateway uses iframe payment form, to accept payment from Khalti you need to allow iframe at least for khalti.com. You have a configuration option 'allow-from' with x-frame-options to allow from a specific domain. You can simply do this in your server configuration:</p> <pre><code>X-Frame-Options \"allow-from https://khalti.com\"\n</code></pre> <p>But using x-frame-options is not an internet standard. It is almost absolute; modern browsers like chrome and safari don't support it.  The recommended way is to use 'frame-ancestors'  CSP rule. (legacy browsers like IE do not support it ). So also for this error:</p> <p>Refused to display 'https://khalti.com/payment/widget/' in a frame because an ancestor violates the following Content Security Policy directive: \"frame-ancestors 'none'\".</p> <p>You need to configure the server as:</p> <pre><code>Content-Security-Policy frame-ancestors 'self' khalti.com *.khalti.com\n</code></pre> <p>One can use both the options for full browser compatibility. So, please change your server configuration accordingly.</p>"},{"location":"khalti-epayment/","title":"Web Checkout (KPG-2)","text":"<p>This documentation details the process of implementing the latest e-Payment Checkout platform released by Khalti.</p>"},{"location":"khalti-epayment/#how-it-works","title":"How it works?","text":"<ul> <li>User visits the merchant's website to make some purchase</li> <li>A unique <code>purchase_order_id</code> is generated at merchant's system</li> <li>Payment request is made to Khalti providing the <code>purchase_order_id</code>, <code>amount</code> in paisa and <code>return_url</code></li> <li>User is redirected to the epayment portal (eg. https://pay.khalti.com)</li> <li>After payment is made by the user, a successful callback is made to the <code>return_url</code></li> <li>The merchant website can optionally confirm the payment received</li> <li>The merchant website then proceeds other steps after payment confirmation</li> </ul>"},{"location":"khalti-epayment/#getting-started","title":"Getting Started","text":"<p>There is no special installation plugin or SDK required for this provided you are able to make a POST request from your web application. However, we shall come up with handy plugins in coming days.</p> <p>Tip</p> <p>A merchant account is required for integration.</p> <p>Access Information</p> <p>For Sandbox Access</p> <p>Signup from  here as a merchant.</p> <p>Please use 987654 as login OTP for sandbox env.</p> <p>For Production Access</p> <p>Please visit here</p> <p>Test Credentials for sandbox environment</p> <p>Test Khalti ID for 9800000000 9800000001 9800000002 9800000003 9800000004 9800000005</p> <p>Test MPIN 1111</p> <p>Test OTP 987654</p> <p>Demo Flow for Checkout</p> <p>Pay with Khalti</p>"},{"location":"khalti-epayment/#api-authorization","title":"API Authorization","text":"<p>HTTP Authorization for api requests is done using Auth Keys. Auth Key must be passed in the  header for authorization in the following format </p> <pre><code>{\n    \"Authorization\": \"Key &lt;LIVE_SECRET_KEY&gt;\"  \n}  \n</code></pre> <p>Tip</p> <p>Use <code>live_secret_key</code> from test-admin.khalti.com during sandbox testing and use <code>live_secret_key</code> from admin.khalti.com for production environments.</p>"},{"location":"khalti-epayment/#api-endpoints","title":"API Endpoints","text":"<p>API Endpoints</p> <p>Sandbox</p> <p>https://dev.khalti.com/api/v2/</p> <p>Production</p> <p>https://khalti.com/api/v2/</p>"},{"location":"khalti-epayment/#initiating-a-payment-request","title":"Initiating a Payment request","text":"<p>Every payment request should be first initiated from the merchant as a server side <code>POST</code> request. Upon success, a unique request identifier is provided called <code>pidx</code> that should be used for any future references</p> URL Method Authorization Format /epayment/initiate/ POST Required application/json"},{"location":"khalti-epayment/#json-payload-details","title":"JSON Payload Details","text":"Field Required Description return_url Yes <ul> <li>Landing page after the transaction. </li><li>Field must contain a URL.</li></ul> website_url Yes <ul> <li>The URL of the website.  </li><li>Field must contain a URL.</li></ul> amount Yes <ul> <li>Total payable amount excluding the service charge. </li><li> Amount must be passed in Paisa </li></ul> purchase_order_id Yes Unique identifier for the transaction generated by merchant purchase_order_name Yes This is the name of the product. customer_info No This field represents to whom the txn is going to be billed to. amount_breakdown No Any number of labels and amounts can be passed but the sum of amount_breakdown.amount mount be equal to amount. product_details No No of set is unlimited"},{"location":"khalti-epayment/#sample-request-payload","title":"Sample Request Payload","text":"<p><pre><code>{\n  \"return_url\": \"https://example.com/payment/\",\n  \"website_url\": \"https://example.com/\",\n  \"amount\": 1300,\n  \"purchase_order_id\": \"test12\",\n  \"purchase_order_name\": \"test\",\n  \"customer_info\": {\n      \"name\": \"Khalti Bahadur\",\n      \"email\": \"example@gmail.com\",\n      \"phone\": \"9800000123\"\n  },\n  \"amount_breakdown\": [\n      {\n          \"label\": \"Mark Price\",\n          \"amount\": 1000\n      },\n      {\n          \"label\": \"VAT\",\n          \"amount\": 300\n      }\n  ],\n  \"product_details\": [\n      {\n          \"identity\": \"1234567890\",\n          \"name\": \"Khalti logo\",\n          \"total_price\": 1300,\n          \"quantity\": 1,\n   \"unit_price\": 1300\n      }\n  ],\n  \"merchant_username\": \"merchant_name\",\n  \"merchant_extra\": \"merchant_extra\"\n}\n</code></pre> Additionally Configuration also accepts attribute starting with <code>merchant_</code> that can be used to pass additional (meta) data.</p> <ul> <li> <p><code>merchant_name</code>: This is merchant name</p> </li> <li> <p><code>merchant_extra</code>: This is extra data</p> </li> </ul> <p>The additional data starting with <code>merchant_</code> is returned in success response payload.</p> <p>Examples</p> cURLphppythonC#NodeJs <pre><code>curl --location 'https://dev.khalti.com/api/v2/epayment/initiate/' \\\n--header 'Authorization: key 05bf95cc57244045b8df5fad06748dab' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n\"return_url\": \"http://example.com/\",\n\"website_url\": \"http://example.com/\",\n\"amount\": \"1000\",\n\"purchase_order_id\": \"Ordwer01\",\n\"purchase_order_name\": \"Test\",\n\"customer_info\": {\n    \"name\": \"Test Bahadur\",\n    \"email\": \"test@khalti.com\",\n    \"phone\": \"9800000001\"\n}\n}'\n</code></pre> <pre><code>&lt;?php\n    $curl = curl_init();\n    curl_setopt_array($curl, array(\n    CURLOPT_URL =&gt; 'https://dev.khalti.com/api/v2/epayment/initiate/',\n    CURLOPT_RETURNTRANSFER =&gt; true,\n    CURLOPT_ENCODING =&gt; '',\n    CURLOPT_MAXREDIRS =&gt; 10,\n    CURLOPT_TIMEOUT =&gt; 0,\n    CURLOPT_FOLLOWLOCATION =&gt; true,\n    CURLOPT_HTTP_VERSION =&gt; CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST =&gt; 'POST',\n    CURLOPT_POSTFIELDS =&gt;'{\n    \"return_url\": \"http://example.com/\",\n    \"website_url\": \"https://example.com/\",\n    \"amount\": \"1000\",\n    \"purchase_order_id\": \"Order01\",\n        \"purchase_order_name\": \"test\",\n\n    \"customer_info\": {\n        \"name\": \"Test Bahadur\",\n        \"email\": \"test@khalti.com\",\n        \"phone\": \"9800000001\"\n    }\n    }\n\n    ',\n    CURLOPT_HTTPHEADER =&gt; array(\n        'Authorization: key live_secret_key_68791341fdd94846a146f0457ff7b455',\n        'Content-Type: application/json',\n    ),\n    ));\n\n    $response = curl_exec($curl);\n\n    curl_close($curl);\n    echo $response;\n</code></pre> <pre><code>import requests\nimport json\n\nurl = \"https://dev.khalti.com/api/v2/epayment/initiate/\"\n\npayload = json.dumps({\n    \"return_url\": \"http://example.com/\",\n    \"website_url\": \"https://example.com/\",\n    \"amount\": \"1000\",\n    \"purchase_order_id\": \"Order01\",\n    \"purchase_order_name\": \"test\",\n    \"customer_info\": {\n    \"name\": \"Ram Bahadur\",\n    \"email\": \"test@khalti.com\",\n    \"phone\": \"9800000001\"\n    }\n})\nheaders = {\n    'Authorization': 'key live_secret_key_68791341fdd94846a146f0457ff7b455',\n    'Content-Type': 'application/json',\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n\nprint(response.text)\n</code></pre> <pre><code>using System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\nnamespace KhaltiApiExample\n{\n    class Program\n    {\n        static async Task Main(string[] args)\n        {\n            var url = \"https://dev.khalti.com/api/v2/epayment/initiate/\";\n\n            var payload = new\n            {\n                return_url = \"http://example.com/\",\n                website_url = \"https://example.com/\",\n                amount = \"1000\",\n                purchase_order_id = \"Order01\",\n                purchase_order_name = \"test\",\n                customer_info = new\n                {\n                    name = \"Ram Bahadur\",\n                    email = \"test@khalti.com\",\n                    phone = \"9800000001\"\n                }\n            };\n\n            var jsonPayload = JsonConvert.SerializeObject(payload);\n            var content = new StringContent(jsonPayload, Encoding.UTF8, \"application/json\");\n\n            var client = new HttpClient();\n            client.DefaultRequestHeaders.Add(\"Authorization\", \"key live_secret_key_68791341fdd94846a146f0457ff7b455\");\n\n            var response = await client.PostAsync(url, content);\n            var responseContent = await response.Content.ReadAsStringAsync();\n\n            Console.WriteLine(responseContent);\n        }\n    }\n}\n</code></pre> <pre><code>var request = require('request');\nvar options = {\n    'method': 'POST',\n    'url': 'https://dev.khalti.com/api/v2/epayment/initiate/',\n    'headers': {\n    'Authorization': 'key live_secret_key_68791341fdd94846a146f0457ff7b455',\n    'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n    \"return_url\": \"http://example.com/\",\n    \"website_url\": \"https://example.com/\",\n    \"amount\": \"1000\",\n    \"purchase_order_id\": \"Order01\",\n    \"purchase_order_name\": \"test\",\n    \"customer_info\": {\n        \"name\": \"Ram Bahadur\",\n        \"email\": \"test@khalti.com\",\n        \"phone\": \"9800000001\"\n    }\n    })\n\n};\nrequest(options, function (error, response) {\n    if (error) throw new Error(error);\n    console.log(response.body);\n});\n</code></pre> <p>Success Response</p> <pre><code>    {\n        \"pidx\": \"bZQLD9wRVWo4CdESSfuSsB\",\n        \"payment_url\": \"https://test-pay.khalti.com/?pidx=bZQLD9wRVWo4CdESSfuSsB\",\n        \"expires_at\": \"2023-05-25T16:26:16.471649+05:45\",\n        \"expires_in\": 1800\n    }\n</code></pre> <p>After getting the success response, the user should be redirected to the <code>payment_url</code> obtained in the success response.</p>"},{"location":"khalti-epayment/#error-responses","title":"Error Responses","text":"<p>return_url is blank</p> <pre><code>{\n    \"return_url\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>return_url is invalid</p> <pre><code>{\n    \"return_url\": [\n        \"Enter a valid URL.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>website_url is blank</p> <pre><code>{\n    \"website_url\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>website_url is invalid</p> <pre><code>{\n    \"website_url\": [\n        \"Enter a valid URL.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>Amount is less than 10</p> <pre><code>{\n    \"amount\": [\n        \"Amount should be greater than Rs. 10, that is 1000 paisa.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>Amount is invalid</p> <pre><code>{\n    \"amount\": [\n        \"A valid integer is required.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>purchase_order_id is blank</p> <pre><code>{\n    \"purchase_order_id\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>purchase_order_name is blank</p> <pre><code>{\n    \"purchase_order_name\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>Amount breakdown doesn't total to the amount passed</p> <pre><code>{\n    \"amount\": [\n        \"Amount Breakdown mismatch.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre>"},{"location":"khalti-epayment/#payment-success-callback","title":"Payment Success Callback","text":"<p>After the user completes the payment, the success response is obtained in the return URL specified during payment initiate. Sample of success response return URL. </p> <ul> <li>The callback url <code>return_url</code> should support <code>GET</code> method</li> <li>User shall be redirected to the <code>return_url</code> with following parameters for confirmation<ul> <li>pidx - The initial payment identifier</li> <li>status - Status of the transaction<ul> <li>Completed - Transaction is success</li> <li>Pending - Transaction is in pending state, request for lookup API. </li> <li>User canceled - Transaction has been canceled by user.</li> </ul> </li> <li>transaction_id - The transaction identifier at Khalti</li> <li>tidx - Same value as transaction id</li> <li>amount - Amount paid in paisa</li> <li>mobile - Payer KHALTI ID</li> <li>purchase_order_id - The initial purchase_order_id provided during payment initiate</li> <li>purchase_order_name - The initial purchase_order_name provided during payment initiate</li> <li>total_amount - Same value as amount</li> </ul> </li> <li>There is no further step required to complete the payment, however merchant can process with their own validation and confirmation steps if required</li> <li>It's recommended that during implementation, payment lookup API is checked for confirmation after the redirect callback is received</li> </ul>"},{"location":"khalti-epayment/#sample-callback-request","title":"Sample Callback Request","text":"<ul> <li> <p>Success transaction callback <pre><code>http://example.com/?pidx=bZQLD9wRVWo4CdESSfuSsB\n&amp;txnId=4H7AhoXDJWg5WjrcPT9ixW\n&amp;amount=1000\n&amp;total_amount=1000\n&amp;status=Completed\n&amp;mobile=98XXXXX904\n&amp;tidx=4H7AhoXDJWg5WjrcPT9ixW\n&amp;purchase_order_id=test12\n&amp;purchase_order_name=test\n&amp;transaction_id=4H7AhoXDJWg5WjrcPT9ixW\n</code></pre></p> </li> <li> <p>Canceled transaction callback <pre><code>http://example.com/?pidx=bZQLD9wRVWo4CdESSfuSsB\n&amp;transaction_id=\n&amp;tidx=\n&amp;amount=1000\n&amp;total_amount=1000\n&amp;mobile=\n&amp;status=User canceled\n&amp;purchase_order_id=test12\n&amp;purchase_order_name=test\n</code></pre></p> </li> </ul> <p>Important</p> <ul> <li>Please use the lookup API for the final validation of the transaction.</li> <li>Khalti payment link expires in 60 minutes in production (default).</li> </ul>"},{"location":"khalti-epayment/#payment-verification-lookup","title":"Payment Verification (Lookup)","text":"<p>After a callback is received, You can use the <code>pidx</code> provided earlier, to lookup and reassure the payment status.</p> URL Method Authorization Format /epayment/lookup/ POST Required application/json"},{"location":"khalti-epayment/#request-data","title":"Request Data","text":"<pre><code>{\n   \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\"\n}\n</code></pre>"},{"location":"khalti-epayment/#success-response","title":"Success Response","text":"<pre><code>{\n   \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n   \"total_amount\": 1000,\n   \"status\": \"Completed\",\n   \"transaction_id\": \"GFq9PFS7b2iYvL8Lir9oXe\",\n   \"fee\": 0,\n   \"refunded\": false\n}\n</code></pre>"},{"location":"khalti-epayment/#pending-response","title":"Pending  Response","text":"<pre><code>{\n   \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n   \"total_amount\": 1000,\n   \"status\": \"Pending\",\n   \"transaction_id\": null,\n   \"fee\": 0,\n   \"refunded\": false\n}\n</code></pre>"},{"location":"khalti-epayment/#initiated-response","title":"Initiated  Response","text":"<pre><code>{\n   \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n   \"total_amount\": 1000,\n   \"status\": \"Initiated\",\n   \"transaction_id\": null,\n   \"fee\": 0,\n   \"refunded\": false\n}\n</code></pre>"},{"location":"khalti-epayment/#refunded-response","title":"Refunded  Response","text":"<pre><code>{\n   \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n   \"total_amount\": 1000,\n   \"status\": \"Refunded\",\n   \"transaction_id\": \"GFq9PFS7b2iYvL8Lir9oXe\",\n   \"fee\": 0,\n   \"refunded\": true\n}\n</code></pre>"},{"location":"khalti-epayment/#expired-response","title":"Expired Response","text":"<pre><code>{\n   \"pidx\": \"H889Er9gq4j92oCrePrDwf\",\n   \"total_amount\": 1000,\n   \"status\": \"Expired\",\n   \"transaction_id\": null,\n   \"fee\": 0,\n   \"refunded\": false\n}\n</code></pre>"},{"location":"khalti-epayment/#canceled-response","title":"Canceled Response","text":"<pre><code>{\n   \"pidx\": \"vNTeXkSEaEXK2J4i7cQU6e\",\n   \"total_amount\": 1000,\n   \"status\": \"User canceled\",\n   \"transaction_id\": null,\n   \"fee\": 0,\n   \"refunded\": false\n}\n</code></pre>"},{"location":"khalti-epayment/#payment-status-code","title":"Payment Status Code","text":"Status Status Code Completed 200 Pending 200 Expired 400 Initiated 200 Refunded 200 User canceled 400 Partially Refunded 200"},{"location":"khalti-epayment/#lookup-payload-details","title":"Lookup Payload Details","text":"Status Description pidx This is the payment id of the transaction. total_amount This is the total amount of the transaction status <code>Completed</code> - Transaction is success <code>Pending</code> - Transaction is failed or is in pending state <code>Refunded</code> - Transaction has been refunded<code>Expired</code> - This payment link has expired <code>User canceled</code> - Transaction has been canceled by the user <code>Partially refunded</code> - Transaction has been partially refunded by the user transaction_id This is the transaction id for the transaction. This is the unique identifier. fee The fee that has been set for the merchant. refunded <code>True</code> - The transaction has been refunded. <code>False</code> - The transaction has not been refunded."},{"location":"khalti-epayment/#lookup-status","title":"Lookup status","text":"Field Description Completed Provide service to user. Pending Hold, do not provide service. And contact Khalti team. Refunded Transaction has been refunded to user. Do not provide service. Expired User have not made the payment, Do not provide the service. User canceled User have canceled the payment, Do not provide the service. <p>Important</p> <ul> <li>Only the status with Completed must be treated as success. </li> <li>Status Canceled , Expired , Failed must be treated as failed.</li> <li>If any negative consequences occur due to incomplete API integration or providing service without checking lookup status, Khalti won\u2019t be accountable for any such losses.  </li> <li>For status other than these, hold the transaction and contact KHALTI team.</li> <li>Payment link expires in 60 minutes in production.</li> </ul>"},{"location":"khalti-epayment/#generic-errors","title":"Generic Errors","text":""},{"location":"khalti-epayment/#when-an-incorrect-authorization-key-is-passed","title":"When an incorrect Authorization key is passed.","text":"<pre><code>{\n   \"detail\": \"Invalid token.\",\n   \"status_code\": 401\n}\n</code></pre>"},{"location":"khalti-epayment/#if-incorrect-pidx-is-passed","title":"If incorrect pidx is passed.","text":"<pre><code>{\n   \"detail\": \"Not found.\",\n   \"error_key\": \"validation_error\"\n}\n</code></pre>"},{"location":"khalti-epayment/#if-key-is-not-passed-as-prefix-in-authorization-key","title":"If key is not passed as prefix in Authorization key","text":"<pre><code>{\n    \"detail\": \"Authentication credentials were not provided.\",\n    \"status_code\": 401\n}\n</code></pre>"},{"location":"resources/","title":"Learn more about Khalti integration","text":"<p>Here are few demo projects and resources in various plaforms.</p>"},{"location":"resources/#official-resources","title":"Official Resources","text":"<ul> <li>Khalti Javascript SDK</li> <li>Khalti Android SDK</li> <li>Khalti iOS SDK</li> <li>Khalti Flutter SDK</li> <li>Khalti WooCommerce Plugin</li> <li>Khalti Opencart Plugin</li> <li>Khalti PrestaShop Plugin</li> <li>Khalti Mangeto 2 Plugin </li> <li>WHMCS Khalti Gateway Plugin</li> <li>Khalti Docs Repository</li> </ul>"},{"location":"resources/#related-projects","title":"Related Projects","text":"<ul> <li>Ruby Wrapper of Khalti Payment API</li> <li>Vuejs component of Khalti SDK</li> </ul>"},{"location":"resources/#example-projects","title":"Example Projects","text":"<ul> <li>Web Example, Client side with Vuejs, Server side with Flask(python) and Nodejs(express)</li> <li>Khalti Checkout Implementation with PHP</li> <li>Khalti checkout with angular5</li> <li>iOS SDK Objective C Example</li> <li>iOS SDK Swift Example</li> <li>Android SDK Example</li> <li>Prestashop Docker Example</li> <li>Opencart Docker Example</li> <li>WooCommerce Docker Example yml</li> <li>Khalti integration for Laravel</li> <li>Khalti Flutter SDK Example (Default Payment Interface)</li> <li>Khalti Flutter SDK Example (Custom Payment Interface)</li> </ul> <p>If you want to list your resource please check contribution guide or contact khalti merchant support</p>"},{"location":"api/refund/","title":"Refund API","text":"<p>The Refund API allows merchants to process refunds for transactions. Refunds can be either full or partial and apply to both wallet and banking transactions.</p>"},{"location":"api/refund/#api-endpoints","title":"API Endpoints","text":"<p>API Endpoints</p> <p>Sandbox</p> <p>https://dev.khalti.com/api/merchant-transaction/{{transaction_id}}/refund/</p> <p>Production</p> <p>https://khalti.com/api/merchant-transaction/{{transaction_id}}/refund/</p> <p>Note</p> <p>The transaction_id will be obtained from Payment Lookup.</p>"},{"location":"api/refund/#request-parameters","title":"Request Parameters","text":""},{"location":"api/refund/#wallet-refund","title":"Wallet Refund","text":""},{"location":"api/refund/#full-refund","title":"Full Refund","text":"<p>For a full refund, no additional parameters are required.</p>"},{"location":"api/refund/#partial-refund","title":"Partial Refund","text":"<p>For a partial refund, the following parameters are required:</p> <ul> <li>Amount: The amount to be refunded.</li> </ul> <p>Note</p> <p>The amount should be in paisa.</p> <p>Example Request (Partial Refund)</p> <pre><code>{\n    \"amount\": 50.00\n}\n</code></pre>"},{"location":"api/refund/#bank-refund","title":"Bank Refund","text":""},{"location":"api/refund/#full-refund_1","title":"Full Refund","text":"<p>For a full refund, the following parameter is required:</p> <ul> <li>Mobile: The mobile number associated with the Khalti account.</li> </ul> <p>Example Request (Full Refund) <pre><code>{\n    \"mobile\": \"1234567890\"\n}\n</code></pre></p>"},{"location":"api/refund/#partial-refund_1","title":"Partial Refund","text":"<p>For a partial refund, the following parameters are required:</p> <ul> <li>Mobile: The mobile number associated with the Khalti account.</li> <li>Amount: The amount to be refunded.</li> </ul> <p>Example Request (Partial Refund)</p> <pre><code>{\n    \"mobile\": \"1234567890\",\n    \"amount\": 75.00\n}\n</code></pre> <p>Success Response</p> <pre><code>{\n    \"detail\": \"Transaction refund successful.\"\n}\n</code></pre> <p>This documentation provides a comprehensive guide for using the Refund API to process both full and partial refunds for wallet and banking transactions.</p>"},{"location":"api/transaction/","title":"Transaction list","text":"<p>Khalti provides API for retrieving list of payments made to a merchant. A merchant should use secret test and live keys for retrieving test and live payment list respectively.</p> <p>List of transactions can also be viewed after logging on Khalti website with merchant account.</p> <p>Replace <code>&lt;secret key&gt;</code> with test or live secret key as per required.</p> <p>Response is paginated and in the following format:</p> <pre><code>{\n  \"total_pages\": 1,\n  \"total_records\": 2,\n  \"next\": null,\n  \"previous\": null,\n  \"record_range\": [\n    1,\n    2\n  ],\n  \"current_page\": 1,\n  \"records\": [\n    {\n      \"idx\": \"8xmeJnNXfoVjCvGcZiiGe7\",\n      \"type\": {\n        \"idx\": \"e476BL6jt9kgagEmsakyTL\",\n        \"name\": \"Wallet payment\"\n      },\n      \"state\": {\n        \"idx\": \"DhvMj9hdRufLqkP8ZY4d8g\",\n        \"name\": \"Completed\",\n        \"template\": \"is complete\"\n      },\n      \"amount\": 1000,\n      \"fee_amount\": 30,\n      \"refunded\": false,\n      \"created_on\": \"2018-06-20T14:48:08.867125+05:45\",\n      \"ebanker\": null,\n      \"user\": {\n        \"idx\": \"cCaPkRPQGn5D8StkiqqMJg\",\n        \"name\": \"Test User\",\n        \"mobile\": \"98XXXXXXX9\"\n      },\n      \"merchant\": {\n        \"idx\": \"UM75Gm2gWmZvA4TPwkwZye\",\n        \"name\": \"Test Merchant\",\n        \"mobile\": \"testmerchant@khalti.com\"\n      }\n    },\n    {\n      \"idx\": \"eWAyLgv9N6FjGnwYqhLpXC\",\n      \"type\": {\n        \"idx\": \"e476BL6jt9kgagEmsakyTL\",\n        \"name\": \"Wallet payment\"\n      },\n      \"state\": {\n        \"idx\": \"Dhvaj9hdRufLqkP8ZY4d8g\",\n        \"name\": \"Confirmed\",\n        \"template\": \"is confirm\"\n      },\n      \"amount\": 10000,\n      \"fee_amount\": 0,\n      \"refunded\": false,\n      \"created_on\": \"2018-07-06T16:54:33.361956+05:45\",\n      \"ebanker\": null,\n      \"user\": {\n        \"idx\": \"cCaPkRPQGn5D8StkiqqMJg\",\n        \"name\": \"Test User\",\n        \"mobile\": \"98XXXXXXX9\"\n      },\n      \"merchant\": {\n        \"idx\": \"UM75Gm2gWmZvA4TPwkwZye\",\n        \"name\": \"Test Merchant\",\n        \"mobile\": \"testmerchant@khalti.com\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"api/transaction/#api-request-examples","title":"API Request Examples","text":"cURLphpPythonRuby <pre><code>curl https://khalti.com/api/v2/merchant-transaction/ \\\n-H \"Authorization:Key &lt;secret key&gt;\n</code></pre> <pre><code>&lt;?php\n$url = \"https://khalti.com/api/v2/merchant-transaction/\";\n\n# Make the call using API.\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n$headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n// Response\n$response = curl_exec($ch);\n$status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\ncurl_close($ch);\n</code></pre> <pre><code>import requests\n\nurl = \"https://khalti.com/api/v2/merchant-transaction/\"\npayload = {}\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, payload, headers = headers)\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\nheaders = {\n  Authorization: \"Key live_secret_key_fc1207298be544b99fa3ad41c7d7b324\"\n}\nuri = URI.parse(\"https://khalti.com/api/v2/merchant-transaction/\")\nhttps = Net::HTTP.new(uri.host, uri.port)\nhttps.use_ssl = true\nrequest = Net::HTTP::Get.new(uri.request_uri, headers)\nresponse = https.request(request)\n\nputs response.body\n</code></pre>"},{"location":"api/transaction_details/","title":"Transaction detail","text":"<p>Khalti provides API for retrieving payment made to a merchant. A merchant should use secret test and live keys for retrieving test and live payment respectively.</p> <p>** Payment details can also be viewed after logging on Khalti website with merchant account.**</p> <p>Replace <code>&lt;secret key&gt;</code> with test or live secret key as per required.</p> <p>Response is in the following format:</p> <pre><code>{\n  \"idx\": \"xeR2tuRqEvBLmeJcZzMb5U\",\n  \"type\": {\n    \"idx\": \"2jwzDS9wkxbkDFquJqfAEC\",\n    \"name\": \"Wallet payment\"\n  },\n  \"state\": {\n    \"idx\": \"DhvMj9hdRufLqkP8ZY4d8g\",\n    \"name\": \"Completed\",\n    \"template\": \"is complete\"\n  },\n  \"amount\": 3000,\n  \"fee_amount\": 90,\n  \"created_on\": \"2018-04-16T17:04:05.204629+05:45\",\n  \"can_refund\": true,\n  \"can_complete\": false,\n  \"ebanker\": null,\n  \"user\": {\n    \"idx\": \"aVPXfJQ8HMYKhAePAU6pg5\",\n    \"name\": \"Test User\",\n    \"mobile\": \"98XXXXXXX9\"\n  },\n  \"merchant\": {\n    \"idx\": \"UM75Gm2gWmZvA4TPwkwZye\",\n    \"name\": \"Test Merchant\",\n    \"mobile\": \"testmerchant@khalti.com\"\n  },\n  \"refunded\": false,\n  \"child_transactions\": [\n    {\n      \"idx\": \"uUx2Ead8qqDuRufYh8vsYj\",\n      \"type\": {\n        \"idx\": \"YpwbDVqAnH42odGZmT5vZ8\",\n        \"name\": \"Fee\"\n      },\n      \"state\": {\n        \"idx\": \"DhvMj9hdRufLqkP8ZY4d8g\",\n        \"name\": \"Completed\",\n        \"template\": \"is complete\"\n      },\n      \"amount\": 90,\n      \"fee_amount\": 0,\n      \"created_on\": \"2018-07-19T12:31:55.620318+05:45\",\n      \"can_refund\": true,\n      \"can_complete\": false,\n      \"ebanker\": null,\n      \"user\": {\n        \"idx\": \"UM75Gm2gWmZvA4TPwkwZye\",\n        \"name\": \"Test Merchant\",\n        \"mobile\": \"testmerchant@khalti.com\"\n      },\n      \"merchant\": {\n        \"idx\": \"9dUzuqrLetWo9VY3fNwB2E\",\n        \"name\": \"\",\n        \"mobile\": \"wallet@khalti.com\"\n      },\n      \"refunded\": false,\n      \"child_transactions\": [],\n      \"meta\": null\n    }\n  ],\n  \"meta\": {\n    \"product_identity\": \"369121518\",\n    \"product_name\": \"Test Product\",\n    \"product_url\": \"http://testproduct.com/wiki/khalti\"\n  }\n}\n</code></pre>"},{"location":"api/transaction_details/#api-request-examples","title":"API Request Examples","text":"cURLphpPythonRuby <pre><code>curl https://khalti.com/api/v2/merchant-transaction/&lt;idx&gt;/ \\\n-H \"Authorization:Key &lt;secret key&gt;\n</code></pre> <pre><code>&lt;?php\n$url = \"https://khalti.com/api/v2/merchant-transaction/&lt;idx&gt;/\";\n\n# Make the call using API.\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n$headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n// Response\n$response = curl_exec($ch);\n$status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\ncurl_close($ch);\n</code></pre> <pre><code>import requests\n\nurl = \"https://khalti.com/api/v2/merchant-transaction/&lt;idx&gt;/\"\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, headers = headers)\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\nheaders = {\n  Authorization: \"Key live_secret_key_fc1207298be544b99fa3ad41c7d7b324\"\n}\nuri = URI.parse(\"https://khalti.com/api/v2/merchant-transaction/&lt;idx&gt;/\")\nhttps = Net::HTTP.new(uri.host, uri.port)\nhttps.use_ssl = true\nrequest = Net::HTTP::Get.new(uri.request_uri, headers)\nresponse = https.request(request)\n\nputs response.body\n</code></pre>"},{"location":"api/transaction_status/","title":"Transaction Status","text":"<p>Khalti provides API for transaction status/lookup to check the state of the user's transaction made to the merchant. A merchant should use secret test and live keys to check test and live transaction status respectively.</p>"},{"location":"api/transaction_status/#api","title":"API","text":"<p>The request signature for transaction lookup is as follows:</p> <ul> <li><code>URL</code>: <code>https://khalti.com/api/v2/payment/status/</code></li> <li><code>Method</code>: <code>GET</code></li> <li>Headers: <ul> <li><code>Authorization</code>: test or live secret key in the form <code>Key &lt;secret key&gt;</code></li> </ul> </li> <li>Params:<ul> <li><code>token</code>: Token or idx given by Khalti after payment confirmation.</li> <li><code>amount</code>: Amount (in paisa) with which payment was initiated.</li> </ul> </li> </ul>"},{"location":"api/transaction_status/#responses","title":"Responses","text":"<p>Once you've made a request as specified above, Khalti server will return you a response of Transaction States in the following format.</p>"},{"location":"api/transaction_status/#success-response","title":"Success Response","text":"<p>Success response consists of the <code>Complete</code> state.</p>"},{"location":"api/transaction_status/#completed-state","title":"Completed State","text":"<pre><code>{\n    \"status\": true,\n    \"detail\": \"Transaction complete.\",\n    \"state\": \"Complete\"\n}\n</code></pre>"},{"location":"api/transaction_status/#error-response","title":"Error Response","text":""},{"location":"api/transaction_status/#1-transaction-not-found","title":"1. Transaction Not Found","text":"<p>An error occurs, if wrong token/idx or wrong amount is passed in the parameter. It consist of the detail of error.</p> <pre><code>{\n    \"status\": false,\n    \"state\": \"Error\",\n    \"detail\": \"Transaction not found\"\n}\n</code></pre>"},{"location":"api/transaction_status/#2-failed-state","title":"2. Failed State","text":"<p>A transaction could be failed due to the possibility of 'confirmation_code' exploitation.</p> <pre><code>{\n    \"status\": false,\n    \"detail\": \"Transaction failed.\",\n    \"state\": \"Failed\"\n}\n</code></pre>"},{"location":"api/transaction_status/#other-responses","title":"Other Responses","text":""},{"location":"api/transaction_status/#1-initiated-state","title":"1. Initiated State","text":"<p>Transactions are initiated after mobile number and khalti pin along with other transaction details are provided.</p> <pre><code>{\n    \"status\": true,\n    \"detail\": \"Transaciton initiated.\",\n    \"state\": \"Initiated\"\n}\n</code></pre>"},{"location":"api/transaction_status/#2-confirmed-state","title":"2. Confirmed State","text":"<p>A transaction is confirmed after transaction details (transaction token, confirmation_code and 3rd party transaction_pin) are provided by the consumer.</p> <pre><code>{\n    \"status\": true,\n    \"detail\": \"Transaciton not verified.\",\n    \"state\": \"Confirmed\"\n}\n</code></pre>"},{"location":"api/transaction_status/#3-refunded-state","title":"3. Refunded State","text":"<pre><code>{\n    \"status\": false,\n    \"detail\": \"Transaciton refunded.\",\n    \"state\": \"Refunded\"\n}\n</code></pre>"},{"location":"api/transaction_status/#4-partially-refunded-state","title":"4. Partially Refunded State","text":"<pre><code>{\n    \"status\": false,\n    \"detail\": \"Transaction partially refunded.\",\n    \"state\": \"Partially refunded\"\n}\n</code></pre>"},{"location":"api/transaction_status/#example-requests","title":"Example Requests","text":"<p>Assuming the token/idx that we received is <code>XPPrDcwtHUg4UQbWEnxRzA</code>.</p> PythonNode.js <pre><code>import requests\n\nurl = \"https://khalti.com/api/v2/payment/status/\"\nparams = {\n  \"token\": \"XPPrDcwtHUg4UQbWEnxRzA\",\n  \"amount\": 1000\n}\nheaders = {\n  \"Authorization\": \"Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\"\n}\n\nresponse = requests.get(url, params, headers = headers)\n</code></pre> <pre><code>const axios = require('axios');\n\nlet data = {\n  \"token\": \"XPPrDcwtHUg4UQbWEnxRzA\",\n  \"amount\": 1000\n};\n\nlet config = {\n  headers: {'Authorization': 'Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'}\n};\n\naxios.get(\"https://khalti.com/api/v2/payment/status/\", data, config)\n.then(response =&gt; {\n  console.log(response.data);\n})\n.catch(error =&gt; {\n  console.log(error);\n});\n</code></pre>"},{"location":"api/verification/","title":"Verification","text":""},{"location":"api/verification/#introduction","title":"Introduction","text":"<p>Whenever your customer pays using the Khalti widget, the client side makes a request to the Khalti server to initiate and confirm the payment.</p> <p>Once they've confirmed the payment, the client will receive a response containing unique token and amount for that particular transaction. Upon receiving the transaction token, the client will make a request to your server with the token and the payment amount.</p> <p>On the next step, you will need to ask the Khalti server to verify the information relayed by the user before completing their purchase order.</p>"},{"location":"api/verification/#why-is-server-to-server-verification-necessary","title":"Why is server-to-server verification necessary?","text":"<p>Since the client side makes the payment directly to Khalti without going through your server first, you need to be sure that the customer actually paid the money they were supposed to before completing their order. This type of verification can only be done securely from the server.</p>"},{"location":"api/verification/#verification-request","title":"Verification request","text":"<p>Your application server must do a <code>POST</code> request to Khalti server for the final step of the payment process. The structure of the request as expected by Khalti server is as follows.</p> <ul> <li><code>url</code>: <code>https://khalti.com/api/v2/payment/verify/</code></li> <li><code>method</code>: <code>POST</code></li> <li><code>headers</code>:<ul> <li><code>Authorization</code>: test or live secret key in the form <code>Key &lt;secret key&gt;</code></li> </ul> </li> <li><code>payload</code>:<ul> <li><code>token</code>: Token given by Khalti after payment confirmation.</li> <li><code>amount</code>: Amount (in paisa) with which payment was initiated. </li> </ul> </li> </ul> <p>Important</p> <p>Cross check the amount from client side to amount from server.</p> <p>Disclaimer</p> <p>If any negative consequences occur due to incomplete API integration, Khalti won\u2019t be liable for any such losses.</p>"},{"location":"api/verification/#verification-response","title":"Verification response","text":"<p>Once you've made a request as specified above, Khalti server will return you a response in the following format.</p> <p><code>Success</code>: Success response consists of the transaction record.</p> <pre><code>{\n  \"idx\": \"8xmeJnNXfoVjCvGcZiiGe7\",\n  \"type\": {\n    \"idx\": \"e476BL6jt9kgagEmsakyTL\",\n    \"name\": \"Wallet payment\"\n  },\n  \"state\": {\n    \"idx\": \"DhvMj9hdRufLqkP8ZY4d8g\",\n    \"name\": \"Completed\",\n    \"template\": \"is complete\"\n  },\n  \"amount\": 1000,\n  \"fee_amount\": 30,\n  \"refunded\": false,\n  \"created_on\": \"2018-06-20T14:48:08.867125+05:45\",\n  \"ebanker\": null,\n  \"user\": {\n    \"idx\": \"cCaPkRPQGn5D8StkiqqMJg\",\n    \"name\": \"Test User\",\n    \"mobile\": \"98XXXXXXX9\"\n  },\n  \"merchant\": {\n    \"idx\": \"UM75Gm2gWmZvA4TPwkwZye\",\n    \"name\": \"Test Merchant\",\n    \"mobile\": \"testmerchant@khalti.com\"\n  }\n}\n</code></pre> <p><code>Error</code>: Error response consists of the detail of errors.</p> <pre><code>{'token': ['Invalid token.']}\n</code></pre>"},{"location":"api/verification/#examples","title":"Examples","text":"<p>Assuming the token that we received is <code>QUao9cqFzxPgvWJNi9aKac</code>.</p> cURLphpPythonRubyNode.js <pre><code>curl https://khalti.com/api/v2/payment/verify/ \\\n    -H \"Authorization:Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b\" \\\n    -d amount=1000 \\\n    -d token=QUao9cqFzxPgvWJNi9aKac\n</code></pre> <pre><code>&lt;?php\n$args = http_build_query(array(\n  'token' =&gt; 'QUao9cqFzxPgvWJNi9aKac',\n  'amount'  =&gt; 1000\n));\n\n$url = \"https://khalti.com/api/v2/payment/verify/\";\n\n# Make the call using API.\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_URL, $url);\ncurl_setopt($ch, CURLOPT_POST, 1);\ncurl_setopt($ch, CURLOPT_POSTFIELDS,$args);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n$headers = ['Authorization: Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'];\ncurl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n\n// Response\n$response = curl_exec($ch);\n$status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\ncurl_close($ch);\n</code></pre> <pre><code>#include &lt;stdio.h&gt;\n\nurl = \"https://khalti.com/api/v2/payment/verify/\"\n\npayload = {\n  'token': 'QUao9cqFzxPgvWJNi9aKac',\n  'amount': 1000\n}\n\nheaders = {\n  'Authorization': 'Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'\n}\n\nresponse = requests.request(\"POST\", url, headers=headers, data=payload)\n</code></pre> <pre><code>require 'uri'\nrequire 'net/http'\n\nheaders = {\n  Authorization: 'Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'\n}\n\nuri = URI.parse('https://khalti.com/api/v2/payment/verify/')\nhttps = Net::HTTP.new(uri.host, uri.port)\nhttps.use_ssl = true\nrequest = Net::HTTP::Post.new(uri.request_uri, headers)\nrequest.set_form_data('token' =&gt; 'QUao9cqFzxPgvWJNi9aKac', 'amount' =&gt; 1000)\nresponse = https.request(request)\n\nputs response.body\n</code></pre> <pre><code>const axios = require('axios');\n\nlet data = {\n  \"token\": \"QUao9cqFzxPgvWJNi9aKac\",\n  \"amount\": 1000\n};\n\nlet config = {\n  headers: {'Authorization': 'Key test_secret_key_f59e8b7d18b4499ca40f68195a846e9b'}\n};\n\naxios.post(\"https://khalti.com/api/v2/payment/verify/\", data, config)\n.then(response =&gt; {\n  console.log(response.data);\n})\n.catch(error =&gt; {\n  console.log(error);\n});\n</code></pre>"},{"location":"checkout/android/","title":"Khalti Android SDK","text":"<p>Khalti Payment Gateway SDK for Andriod with default payment interface, works out of the box without having to add any additional user interface.</p> <p> </p> <p> </p>"},{"location":"checkout/android/#installation","title":"Installation","text":"<p>Read the introduction here.</p>"},{"location":"checkout/android/#getting-started","title":"Getting Started","text":"<p>Integrating Khalti Payment Gateway requires merchant account.  You can always  .</p> <p>Tip</p> <p>A merchant account is required for integration.</p> <p>Access Information</p> <p>For Sandbox Access</p> <p>Signup from  here as a merchant.</p> <p>Please use 987654 as login OTP for sandbox env.</p> <p>For Production Access</p> <p>Please visit here</p> <p>Test Credentials for sandbox environment</p> <p>Test Khalti ID for 9800000000 9800000001 9800000002 9800000003 9800000004 9800000005</p> <p>Test MPIN 1111</p> <p>Test OTP 987654</p> <p>Read the steps to integrate Khalti Payment Gateway in details here.</p>"},{"location":"checkout/android/#requirements","title":"Requirements","text":"<ul> <li>Android 5.0 and above</li> <li>AndroidX</li> <li>Android Studio 3 and above</li> </ul>"},{"location":"checkout/android/#configuration","title":"Configuration","text":"<p>Add <code>checkout-android</code> to your <code>build.gradle</code> dependencies</p> <pre><code>implementation \"com.khalti:checkout-android:$latest_version\"\n</code></pre> <p>Also add the following lines inside the <code>android</code> block of your <code>build.gradle</code> file</p> <pre><code>compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n   }\n</code></pre>"},{"location":"checkout/android/#fetching-pidx","title":"Fetching <code>pidx</code>","text":"<p>Please go through the Initiating a Payment request to learn how to request the <code>pidx</code></p>"},{"location":"checkout/android/#setup","title":"Setup","text":""},{"location":"checkout/android/#building-config","title":"Building Config","text":"<p>Create an instance of <code>KhaltiPayConfig</code> with <code>publicKey</code>, <code>pidx</code>,  <code>returnUrl</code>, <code>environment</code> as parameters.</p> <pre><code>val config = KhaltiPayConfig(  \n    publicKey = \"&lt;your_public_key&gt;\",  \n    pidx = \"&lt;your_pidx&gt;\",  \n    environment = Environment.TEST  \n)\n</code></pre> <p>Note : <code>environment</code> has 2 options; <code>Environment.prod</code> &amp; <code>Environment.Test</code></p>"},{"location":"checkout/android/#building-khalti","title":"Building Khalti","text":"<p>Create an instance of <code>Khalti</code>, using <code>init</code> function, with the above <code>config</code> as parameter along with the callbacks <code>onPaymentResult</code>, <code>onMessage</code> and <code>onReturn</code>. Here, <code>onReturn</code> is optional and can be skipped.</p> <pre><code>Khalti.init(  \n    LocalContext.current,  // context\n    config,  \n    onPaymentResult = { paymentResult, khalti -&gt;  \n         // your implementation here     \n    },  \n    onMessage = { payload, khalti -&gt;  \n         // your implementation here     \n    },  \n    onReturn = { khalti -&gt;  \n         // your implementation here     \n    }  \n)\n</code></pre> <p>Note : Make sure the context you passed to <code>Khalti</code> can be used to open an activity.</p>"},{"location":"checkout/android/#callbacks","title":"Callbacks","text":"Callback Description <code>onPaymentResult(result: PaymentResult, khalti: Khalti)</code> Invoked on completion of payment. Inside this callback you'll have access to <code>PaymentResult</code> object and <code>Khalti</code> objectAfter completion of payment process, <code>khalti</code> will internally trigger the verification API. It's result is then propagated through the <code>onPaymentResult</code> callback. You'll receive an object of <code>PaymentResult</code>. <code>onMessage(payload: OnMessagePayload, khalti: Khalti)</code> Invoked on failures, exceptions or to convey message at any point of time. Inside this callback you'll have access to <code>OnMessagePayload</code> and <code>Khalti</code> object<code>OnMessagePayload</code> contains <code>onMessageEvent</code> that dictates what type of event triggered the callback. It also contains a flag <code>needsPaymentConfirmation</code> which if <code>true</code> indicates that you must verify the status of the payment. It can be done through the <code>Khalti</code> object passed to this callback. Use <code>khalti.verify()</code>.<code>onMessage</code> should not be considered as an error by itself. Always consult the <code>OnMessageEvent</code> for further clarification. <code>onReturn(khalti: Khalti)</code> This is an optional callback that is invoked when <code>return_url</code>'s page is successfully loaded. Inside this callback you'll have access to <code>Khalti</code> object"},{"location":"checkout/android/#schema","title":"Schema","text":"<pre><code>PaymentResult {\n    status: String,\n    payload: PaymentPayload,\n}\n</code></pre> <pre><code>PaymentPayload {\n    pidx: String,\n    totalAmount: Long,\n    status: String,\n    transactionId: String,\n    fee: Long,\n    refunded: Boolean\n    purchaseOrderId: String,\n    purchaseOrderName: String,\n    extraMerchantParams: Map&lt;String, Object&gt;\n}\n</code></pre> <pre><code>OnMessagePayload {\n    event: OnMessageEvent,\n    message: String,\n    throwable: Throwable,\n    code: Number,\n    needsPaymentConfirmation: Boolean\n}\n</code></pre> <pre><code>OnMessageEvent {\n    KPGDisposed, ReturnUrlLoadFailure, NetworkFailure, PaymentLookUpFailure, Unknown\n}\n</code></pre>"},{"location":"checkout/android/#public-functions-in-khalti","title":"Public functions in <code>Khalti</code>","text":"Function Description <code>init(Context, KhaltiPayConfig, OnPaymentResult, OnMessage, OnReturn)</code> Creates an instance of <code>Khalti</code>. Use this function to create an object of <code>Khalti</code><code>val khalti = Khalti.init()</code> <code>open()</code> Opens the payment page. After creating an object of <code>Khalti</code>. Use the said object to open the payment page.<code>khalti.open()</code> <code>verify()</code> Looks up of the payment status. <code>Khalti</code> sdk internally verifies the status of the payment, but if required the status lookup can be triggered again. The result is propagated through the callbacks passed during <code>init()</code>.  Use this function to confirm the payment status if and when <code>needsPaymentConfirmation</code> is <code>true</code> in <code>OnMessagePayload</code>.<code>khalti.verify()</code> <code>close()</code> Closes the payment page. <code>Khalti</code> does not close the payment page and it's sole responsibility lies on the merchant. Use this function to close the payment page when required.<code>khalti.close()</code>"},{"location":"checkout/android/#sample-implementations","title":"Sample Implementations","text":""},{"location":"checkout/android/#method-1-with-onreturn","title":"Method 1: With <code>onReturn</code>","text":"<p>Initialize the <code>Khalti</code> Object</p> <pre><code>val khalti = Khalti.init(  \n    LocalContext.current,  \n    KhaltiPayConfig(  \n        publicKey = \"&lt;public_key&gt;\",  \n        pidx = \"&lt;pidx&gt;\",  \n        environment = Environment.TEST // Or Environment.Prod for production  \n    ),  \n    onPaymentResult = { paymentResult, khalti -&gt;  \n        // Your implementation  \n    },  \n    onMessage = { payload, khalti -&gt;  \n        // Your implementation  \n    },  \n    onReturn = { khalti -&gt;  \n        // Your implementation  \n    } \n)\n</code></pre>"},{"location":"checkout/android/#method-2-without-onreturn","title":"Method 2: Without <code>onReturn</code>","text":"<p>Initialize the <code>Khalti</code> Object</p> <pre><code>val khalti = Khalti.init(  \n    LocalContext.current,  \n    KhaltiPayConfig(  \n        publicKey = \"&lt;public_key&gt;\",  \n        pidx = \"&lt;pidx&gt;\",  \n        environment = Environment.TEST // Or Environment.Prod for production  \n    ),  \n    onPaymentResult = { paymentResult, khalti -&gt;  \n        // Your implementation  \n    },  \n    onMessage = { payload, khalti -&gt;  \n        // Your implementation  \n    } \n)\n</code></pre> <p>Use <code>khalti.open()</code>, <code>khalti.verify()</code>, <code>khalti.close()</code> wherever appropriate.</p> <p>Check out the source for Khalti checkout on Github.</p>"},{"location":"checkout/android/#changelog","title":"Changelog","text":""},{"location":"checkout/diy-banking/","title":"Ebanking and Mobile Banking","text":"<p>This documentation details the process of implementing the latest e-Payment eBanking Checkout and Mobile Banking platform released by Khalti.</p>"},{"location":"checkout/diy-banking/#1-get-bank-list","title":"1. Get Bank List","text":"<p>This API provides the bank list. The request signature for initiation is as follows:</p> <ul> <li>ebanking URL : <code>https://khalti.com/api/v5/bank/?payment_type=ebanking</code></li> <li>Mbanking URL :<code>https://khalti.com/api/v5/bank/?payment_type=mobilecheckout</code></li> <li>Method: <code>GET</code></li> <li>Authorization : Not Required</li> </ul> <p>The response contains list of banks with the details as shown below.</p> <pre><code>{\n  \"total_pages\": 1,\n  \"total_records\": 14,\n  \"next\": null,\n  \"previous\": null,\n  \"record_range\": [1, 14],\n  \"current_page\": 1,\n  \"records\": [\n    {\n      \"idx\": \"UZmPqTDkdhKmukdZe2gVWZ\",\n      \"name\": \"Agricultural Development Bank Limited\",\n      \"short_name\": \"ADBL\",\n      \"logo\": \"https://khalti-static.s3.ap-south-1.amazonaws.com/media/bank-logo/adbl.png\",\n      \"swift_code\": \"ADBLNPKA\",\n      \"has_cardpayment\": false,\n      \"address\": \"Singhadurbar, Kathmandu\",\n      \"ebanking_url\": \"\",\n      \"has_ebanking\": true,\n      \"has_mobile_checkout\": true,\n      \"has_direct_withdraw\": true,\n      \"has_nchl\": false,\n      \"has_mobile_banking\": false,\n      \"play_store\": \"\",\n      \"app_store\": \"\",\n      \"branches\": []\n    }\n  ]\n}\n</code></pre>"},{"location":"checkout/diy-banking/#2-initiate-transaction","title":"2. Initiate transaction","text":"<p>Every payment request should be first initiated from the merchant as a server side POST request. Upon success, a unique request identifier is provided called pidx that should be used for any future references.</p> <ul> <li>URL : <code>https://khalti.com/api/v2/epayment/initiate/</code></li> <li>Method : <code>POST</code></li> <li>Authorization : Required</li> </ul> <p>For more information click here.</p>"},{"location":"checkout/diy-banking/#sample-request-payload","title":"Sample Request Payload","text":"<pre><code>{\n    \"return_url\": \"https://testing.com/\",\n    \"website_url\": \"https://testing.com/\",\n    \"amount\": \"10000\",\n    \"ttl\": 1000,\n    \"bank\": \"ayCEFuEpkmkjBj3WVWRh32\",\n    \"modes\": [\n        \"MOBILE_BANKING\"\n    ],\n        \"purchase_order_id\": \"wakanada_01\",\n        \"purchase_order_name\": \"wakanda 02\",\n    \"customer_info\": {\n        \"name\": \"test shrestha\",\n        \"email\": \"example@gmail.com\",\n        \"phone\": \"9801856451\"\n    },\n    \"amount_breakdown\": [\n        {\n            \"label\": \"Mark Price\",\n            \"amount\": \"10000\"\n        },\n        {\n            \"label\": \"VAT\",\n            \"amount\": 0\n        }\n    ],\n    \"product_details\": [\n        {\n            \"identity\": \"shark_1\",\n            \"name\": \"shark_2\",\n            \"total_price\": 10000,\n            \"quantity\": 1,\n            \"unit_price\": 10000\n        }\n    ]\n}\n</code></pre> <p>Success Response</p> <pre><code>    {\n        \"pidx\": \"bZQLD9wRVWo4CdESSfuSsB\",\n        \"payment_url\": \"https://test-pay.khalti.com/?pidx=bZQLD9wRVWo4CdESSfuSsB\",\n        \"expires_at\": \"2023-05-25T16:26:16.471649+05:45\",\n        \"expires_in\": 1800\n    }\n</code></pre> <p>After getting the success response, the user should be redirected to the <code>payment_url</code> obtained in the success response.</p>"},{"location":"checkout/diy-banking/#error-responses","title":"Error Responses","text":"<p>return_url is blank</p> <pre><code>{\n    \"return_url\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>return_url is invalid</p> <pre><code>{\n    \"return_url\": [\n        \"Enter a valid URL.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>website_url is blank</p> <pre><code>{\n    \"website_url\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>website_url is invalid</p> <pre><code>{\n    \"website_url\": [\n        \"Enter a valid URL.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>Amount is less than 10</p> <pre><code>{\n    \"amount\": [\n        \"Amount should be greater than Rs. 100, that is 10000 paisa.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>Amount is invalid</p> <pre><code>{\n    \"amount\": [\n        \"A valid integer is required.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>purchase_order_id is blank</p> <pre><code>{\n    \"purchase_order_id\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>purchase_order_name is blank</p> <pre><code>{\n    \"purchase_order_name\": [\n        \"This field may not be blank.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre> <p>Amount breakdown doesn't total to the amount passed</p> <pre><code>{\n    \"amount\": [\n        \"Amount Breakdown mismatch.\"\n    ],\n    \"error_key\": \"validation_error\"\n}\n</code></pre>"},{"location":"checkout/diy-banking/#payment-success-callback","title":"Payment Success Callback","text":"<p>After the user completes the payment, the success response is obtained in the return URL specified during payment initiate. Sample of success response return URL.</p> <ul> <li>The callback url <code>return_url</code> should support <code>GET</code> method</li> <li>User shall be redirected to the <code>return_url</code> with following parameters for confirmation</li> <li>pidx - The initial payment identifier</li> <li>status - Status of the transaction<ul> <li>Completed - Transaction is success</li> <li>Pending - Transaction is in pending state, request for lookup API.</li> <li>User canceled - Transaction has been canceled by user.</li> </ul> </li> <li>transactionid - _The transaction identifier at Khalti</li> <li>tidx - Same value as transaction id</li> <li>amount - Amount paid in paisa</li> <li>mobile - Payer KHALTI ID</li> <li>purchaseorder_id - _The initial purchase_order_id provided during payment initiate</li> <li>purchaseorder_name - _The initial purchase_order_name provided during payment initiate</li> <li>totalamount - _Same value as amount</li> <li>There is no further step required to complete the payment, however merchant can process with their own validation and confirmation steps if required</li> <li>It's recommended that during implementation, payment lookup API is checked for confirmation after the redirect callback is received</li> </ul>"},{"location":"checkout/diy-banking/#sample-callback-request","title":"Sample Callback Request","text":"<ul> <li>Success transaction callback</li> </ul> <pre><code>http://example.com/?pidx=bZQLD9wRVWo4CdESSfuSsB\n&amp;txnId=4H7AhoXDJWg5WjrcPT9ixW\n&amp;amount=10000\n&amp;total_amount=10000\n&amp;status=Completed\n&amp;mobile=98XXXXX904\n&amp;tidx=4H7AhoXDJWg5WjrcPT9ixW\n&amp;purchase_order_id=test12\n&amp;purchase_order_name=test\n&amp;transaction_id=4H7AhoXDJWg5WjrcPT9ixW\n</code></pre> <ul> <li>Canceled transaction callback</li> </ul> <pre><code>http://example.com/?pidx=bZQLD9wRVWo4CdESSfuSsB\n&amp;transaction_id=\n&amp;tidx=\n&amp;amount=10000\n&amp;total_amount=10000\n&amp;mobile=\n&amp;status=User canceled\n&amp;purchase_order_id=test12\n&amp;purchase_order_name=test\n</code></pre> <p>!!! Important + Please use the lookup API for the final validation of the transaction. + Khalti payment link expires in 60 minutes in production (default).</p>"},{"location":"checkout/diy-banking/#payment-verification-lookup","title":"Payment Verification (Lookup)","text":"<p>After a callback is received, You can use the <code>pidx</code> provided earlier, to lookup and reassure the payment status.</p> URL Method Authorization Format /epayment/lookup/ POST Required application/json"},{"location":"checkout/diy-banking/#request-data","title":"Request Data","text":"<pre><code>{\n  \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\"\n}\n</code></pre>"},{"location":"checkout/diy-banking/#success-response","title":"Success Response","text":"<pre><code>{\n  \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n  \"total_amount\": 10000,\n  \"status\": \"Completed\",\n  \"transaction_id\": \"GFq9PFS7b2iYvL8Lir9oXe\",\n  \"fee\": 0,\n  \"refunded\": false\n}\n</code></pre>"},{"location":"checkout/diy-banking/#pending-response","title":"Pending Response","text":"<pre><code>{\n  \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n  \"total_amount\": 10000,\n  \"status\": \"Pending\",\n  \"transaction_id\": null,\n  \"fee\": 0,\n  \"refunded\": false\n}\n</code></pre>"},{"location":"checkout/diy-banking/#initiated-response","title":"Initiated Response","text":"<pre><code>{\n  \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n  \"total_amount\": 10000,\n  \"status\": \"Initiated\",\n  \"transaction_id\": null,\n  \"fee\": 0,\n  \"refunded\": false\n}\n</code></pre>"},{"location":"checkout/diy-banking/#refunded-response","title":"Refunded Response","text":"<pre><code>{\n  \"pidx\": \"HT6o6PEZRWFJ5ygavzHWd5\",\n  \"total_amount\": 10000,\n  \"status\": \"Refunded\",\n  \"transaction_id\": \"GFq9PFS7b2iYvL8Lir9oXe\",\n  \"fee\": 0,\n  \"refunded\": true\n}\n</code></pre>"},{"location":"checkout/diy-banking/#expired-response","title":"Expired Response","text":"<pre><code>{\n  \"pidx\": \"H889Er9gq4j92oCrePrDwf\",\n  \"total_amount\": 10000,\n  \"status\": \"Expired\",\n  \"transaction_id\": null,\n  \"fee\": 0,\n  \"refunded\": false\n}\n</code></pre>"},{"location":"checkout/diy-banking/#canceled-response","title":"Canceled Response","text":"<pre><code>{\n  \"pidx\": \"vNTeXkSEaEXK2J4i7cQU6e\",\n  \"total_amount\": 10000,\n  \"status\": \"User canceled\",\n  \"transaction_id\": null,\n  \"fee\": 0,\n  \"refunded\": false\n}\n</code></pre>"},{"location":"checkout/diy-banking/#payment-status-code","title":"Payment Status Code","text":"Status Status Code Completed 200 Pending 200 Expired 400 Initiated 200 Refunded 200 User canceled 400 Partially Refunded 200"},{"location":"checkout/diy-banking/#lookup-payload-details","title":"Lookup Payload Details","text":"Status Description pidx This is the payment id of the transaction. total_amount This is the total amount of the transaction status <code>Completed</code> - Transaction is success <code>Pending</code> - Transaction is failed or is in pending state <code>Refunded</code> - Transaction has been refunded<code>Expired</code> - This payment link has expired <code>User canceled</code> - Transaction has been canceled by the user <code>Partially refunded</code> - Transaction has been partially refunded by the user transaction_id This is the transaction id for the transaction. This is the unique identifier. fee The fee that has been set for the merchant. refunded <code>True</code> - The transaction has been refunded. <code>False</code> - The transaction has not been refunded."},{"location":"checkout/diy-banking/#lookup-status","title":"Lookup status","text":"Field Description Completed Provide service to user. Pending Hold, do not provide service. And contact Khalti team. Refunded Transaction has been refunded to user. Do not provide service. Expired User have not made the payment, Do not provide the service. User canceled User have canceled the payment, Do not provide the service. <p>Important</p> <ul> <li>Only the status with Completed must be treated as success. + Status Canceled , Expired , Failed must be treated as failed. + If any negative consequences occur due to incomplete API integration or providing service without checking lookup status, Khalti won\u2019t be accountable for any such losses.  </li> <li>For status other than these, hold the transaction and contact KHALTI team. + Payment link expires in 60 minutes in production.</li> </ul>"},{"location":"checkout/diy-banking/#generic-errors","title":"Generic Errors","text":""},{"location":"checkout/diy-banking/#when-an-incorrect-authorization-key-is-passed","title":"When an incorrect Authorization key is passed.","text":"<pre><code>{\n  \"detail\": \"Invalid token.\",\n  \"status_code\": 401\n}\n</code></pre>"},{"location":"checkout/diy-banking/#if-incorrect-pidx-is-passed","title":"If incorrect pidx is passed.","text":"<pre><code>{\n  \"detail\": \"Not found.\",\n  \"error_key\": \"validation_error\"\n}\n</code></pre>"},{"location":"checkout/diy-banking/#if-key-is-not-passed-as-prefix-in-authorization-key","title":"If key is not passed as prefix in Authorization key","text":"<pre><code>{\n  \"detail\": \"Authentication credentials were not provided.\",\n  \"status_code\": 401\n}\n</code></pre>"},{"location":"checkout/diy-wallet/","title":"Introduction","text":"<p>Read this documentation only if you plan to implement your own SDK instead of using the ones provided by Khalti.</p> <p>If you are not sure about that, please check our SDK for Android, iOS and Web platforms.</p> <p>Before starting out, read the rest of the documentation at http://docs.khalti.com to understand the basic workflow of the merchant API.</p>"},{"location":"checkout/diy-wallet/#api","title":"API","text":""},{"location":"checkout/diy-wallet/#1-initiate-transaction","title":"1. Initiate transaction","text":"<p>As the title says, this API is called to initiates the transaction.</p> <p>E.g. When the user clicks <code>Checkout</code> button, you will need to prompt for their Khalti registered mobile number, and call this API once the payer submits.</p> <p>The request signature for initiation is as follows:</p> <ul> <li>URL: <code>https://khalti.com/api/v2/payment/initiate/</code></li> <li>Method: <code>POST</code></li> <li>Data:</li> <li><code>public_key</code>: Required. Either <code>test</code> or <code>live</code> public key.</li> <li><code>mobile</code>: Required. The Khalti registered mobile number of payer.</li> <li><code>transaction_pin</code>: Required. Third party khalti pin submitted by the user.</li> <li><code>amount</code>: Required. The amount value of payment. Amount must be in paisa and greater than equal to 1000 i.e Rs 10.</li> <li><code>product_identity</code>: Required. A string to identify the product.</li> <li><code>product_name</code>: Required. Descriptive name for the product.</li> <li><code>product_url</code>: Optional. Url of the product.</li> </ul> <p>Additional information about the product can be passed along with this for reporting purposes. The keys for additional data must be prefixed with <code>merchant_</code>.</p> <p>A sample request adhering to the above signature will look something like this:</p> <pre><code>{\n  \"public_key\": \"live_public_key_546eb6da05544d7d88961db04fdb9721\",\n  \"mobile\": \"9842XXXXXX\",\n  \"transaction_pin\": \"1234\",\n  \"amount\": 10000,\n  \"product_identity\": \"book/id-120\",\n  \"product_name\": \"A Song of Ice and Fire\",\n  \"product_url\": \"http://bookexample.com\"\n}\n</code></pre> <p>The response will be something like this:</p> <pre><code>{\n  \"token\": \"BVNKCiLZhZipkMGws5hgS8\",\n}\n</code></pre>"},{"location":"checkout/diy-wallet/#2-confirm-transaction","title":"2. Confirm transaction","text":"<p>In this step, you will need to prompt the user for the OTP (One Time Password), and their 3rd party khalti pin. Once those details are submitted, the request to verify transaction should be made like this:</p> <p>The value in <code>token</code> key from the response in previous step is required to verify the transaction.</p> <p>Request signature:</p> <ul> <li>URL: <code>https://khalti.com/api/v2/payment/confirm/</code></li> <li>Method: <code>POST</code></li> <li>Data:</li> <li><code>public_key</code>: Required. Should be same as the key used for transaction initiation.</li> <li><code>token</code>: Required. Transaction initiation token.</li> <li><code>confirmation_code</code>: Required. OTP submitted by the user.</li> <li><code>transaction_pin</code>: Required. Third party khalti pin submitted by the user.</li> </ul> <p>A sample request adhering to above signature will look like this:</p> <pre><code>{\n\"public_key\": \"live_public_key_546eb6da05544d7d88961db04fdb9721\",\n\"token\": \"VGMyaKVDQQyorBiQ3W99WL\",\n\"confirmation_code\": \"206964\",\n\"transaction_pin\": \"1234\"\n}\n</code></pre> <p>A successful request will yield a response that looks something like this:</p> <pre><code>{\n  \"token\": \"VGMyaKVDQQyorBiQ3W99WL\",\n  \"amount\": 10000,\n  \"mobile\": \"98XXXXX099\",\n  \"product_identity\": \"book/id-120\",\n  \"product_name\": \"A Song of Ice and Fire\"\n}\n</code></pre>"},{"location":"checkout/diy-wallet/#3-verify-transaction","title":"3. Verify transaction","text":"<p>The API requests mentioned in previous steps are to be made from the client side i.e. from the front-end. Once those steps are complete, you  need to make a verification request using your secret key from the server.</p> <p>See http://docs.khalti.com/api/verification/ for more information on how to verify the transaction.</p>"},{"location":"checkout/diy-wallet/#notes","title":"Notes","text":"<ol> <li>Initiate and confirm api requests should be made from the front-end.</li> </ol>"},{"location":"checkout/ios/","title":"iOS SDK","text":"<p> Khalti Payment Gateway iOS SDK </p> <p> </p> <p>This documentation details the process to integrate Khalti payment gateway in your iOS app.</p>"},{"location":"checkout/ios/#example","title":"Example","text":"<p>Swift : Clone project and use 'Example' directory. Do 'pod install'.</p> <p>Objective-C :  Clone project and use 'KhaltiCheckoutObjectiveC ' directory. Do 'pod install'.</p>"},{"location":"checkout/ios/#example-on-how-to-change-swift-and-objective-c-targets","title":"Example on how to change swift and objective c targets","text":"<p>Select Objectivec</p> <p>Read the steps to integrate Khalti Payment Gateway in details here.</p>"},{"location":"checkout/ios/#tested-on","title":"Tested on","text":"<ul> <li>Xcode 15</li> <li>swift 5</li> </ul>"},{"location":"checkout/ios/#installation-guide","title":"Installation guide","text":"<p>Khalti is available through CocoaPods. To install it, simply add the following line to your Podfile:</p> <pre><code>pod 'KhaltiCheckout'\n</code></pre>"},{"location":"checkout/ios/#fetching-pidx","title":"Fetching <code>pidx</code>","text":"<p>Please go through the Initiating a Payment request to learn how to request the <code>pidx</code></p>"},{"location":"checkout/ios/#setup","title":"Setup","text":"<p>Note : <code>environment</code> has 2 options; <code>Environment.prod</code> &amp; <code>Environment.Test</code></p>"},{"location":"checkout/ios/#building-khalti","title":"Building Khalti","text":"<p>Create an instance of <code>Khalti</code>, using <code>init</code> function, with the above <code>config</code> as parameter along with the callbacks <code>onPaymentResult</code>, <code>onMessage</code> and <code>onReturn</code>. Here, <code>onReturn</code> is optional and can be skipped.</p> <pre><code>Khalti.init(config: KhaltiPayConfig(publicKey:\"4aa1b684f4de4860968552558fc8487d\", pIdx:\"8mBsbuzGYDWveAZkMn4Q2F\",environment:Environment.TEST), \nonPaymentResult: {[weak self] (paymentResult,khalti) in\n\n\n}, onMessage: {[weak self](onMessageResult,khalti) in\n\n\n}, onReturn: {(khalti) in\n // called when payment is success\n})\n</code></pre>"},{"location":"checkout/ios/#callbacks","title":"Callbacks","text":"Callback Description <code>onPaymentResult(result: PaymentResult, khalti: Khalti)</code> Invoked on completion of payment. Inside this callback you'll have access to <code>PaymentResult</code> object and <code>Khalti</code> objectAfter completion of payment process, <code>khalti</code> will internally trigger the verification API. It's result is then propagated through the <code>onPaymentResult</code> callback. You'll receive an object of <code>PaymentResult</code>. <code>onMessage(payload: OnMessagePayload, khalti: Khalti)</code> Invoked on failures, exceptions or to convey message at any point of time. Inside this callback you'll have access to <code>OnMessagePayload</code> and <code>Khalti</code> object<code>OnMessagePayload</code> contains <code>onMessageEvent</code> that dictates what type of event triggered the callback. It also contains a flag <code>needsPaymentConfirmation</code> which if <code>true</code> indicates that you must verify the status of the payment. It can be done through the <code>Khalti</code> object passed to this callback. Use <code>khalti.verify()</code>.<code>onMessage</code> should not be considered as an error by itself. Always consult the <code>OnMessageEvent</code> for further clarification. <code>onReturn(khalti: Khalti)</code> This is an optional callback that is invoked when <code>return_url</code>'s page is successfully loaded. Inside this callback you'll have access to <code>Khalti</code> object"},{"location":"checkout/ios/#public-functions-in-khalti","title":"Public functions in <code>Khalti</code>","text":"Function Description <code>init(Context, KhaltiPayConfig, OnPaymentResult, OnMessage, OnReturn)</code> Creates an instance of <code>Khalti</code>. Use this function to create an object of <code>Khalti</code><code>val khalti = Khalti.init()</code> <code>open()</code> Opens the payment page. After creating an object of <code>Khalti</code>. Use the said object to open the payment page.<code>khalti.open()</code> <code>verify()</code> Looks up of the payment status. <code>Khalti</code> sdk internally verifies the status of the payment, but if required the status lookup can be triggered again. The result is propagated through the callbacks passed during <code>init()</code>.  Use this function to confirm the payment status if and when <code>needsPaymentConfirmation</code> is <code>true</code> in <code>OnMessagePayload</code>.<code>khalti.verify()</code> <code>close()</code> Closes the payment page. <code>Khalti</code> does not close the payment page and it's sole responsibility lies on the merchant. Use this function to close the payment page when required.<code>khalti.close()</code>"},{"location":"checkout/ios/#sample-implementations","title":"Sample Implementations","text":""},{"location":"checkout/ios/#method-1-with-onreturn","title":"Method 1: With <code>onReturn</code>","text":"<p>Initialize the <code>Khalti</code> Object</p> <pre><code> khalti = Khalti.init(config: KhaltiPayConfig(publicKey:\"4aa1b684f4de4860968552558fc8487d\", pIdx:\"8mBsbuzGYDWveAZkMn4Q2F\",environment:Environment.TEST), onPaymentResult: {[weak self] (paymentResult,khalti) in\n        print(\"Demo | onPaymentResult\", paymentResult)\n\n}, onMessage: {[weak self](onMessageResult,khalti) in\n\n        //Handle onMessage callback here\n        //if needsPaymentConfiramtion true then verify payment status\n\n let shouldVerify = onMessageResult.needsPaymentConfirmation\n\n         if shouldVerify {\n          khalti?.verify()\n         }else{\n          khalti?.close()\n         }\n\n\n}, onReturn: {(khalti) in\n // called when payment is success\n})\n</code></pre>"},{"location":"checkout/ios/#method-2-without-onreturn","title":"Method 2: Without <code>onReturn</code>","text":"<p>Initialize the <code>Khalti</code> Object</p> <pre><code> khalti = Khalti.init(config: KhaltiPayConfig(publicKey:\"4aa1b684f4de4860968552558fc8487d\", pIdx:\"8mBsbuzGYDWveAZkMn4Q2F\",environment:Environment.TEST), onPaymentResult: {[weak self] (paymentResult,khalti) in\n        print(\"Demo | onPaymentResult\", paymentResult)\n\n}, onMessage: {[weak self](onMessageResult,khalti) in\n\n        //Handle onMessage callback here\n        //if needsPaymentConfiramtion true then verify payment status\n\n        let shouldVerify = onMessageResult.needsPaymentConfirmation\n\n        if shouldVerify {\n         khalti?.verify()\n        }else{\n         khalti?.close()\n        }\n\n\n})\n</code></pre> <p>Use <code>khalti.open()</code>, <code>khalti.verify()</code>, <code>khalti.close()</code> wherever appropriate.</p> <p>Check out the source for Khalti checkout on Github.</p>"},{"location":"checkout/ios/#changelog","title":"Changelog","text":"<p>For Queries, feel free to mail us at: merchant@khalti.com</p> <p>Check out the API Documentation.</p>"},{"location":"checkout/flutter/khalti-checkout/","title":"Khalti Flutter SDK","text":"<p>Khalti Payment Gateway SDK for Flutter with default payment interface, works out of the box without having to add any additional user interface.</p> <p> </p> <p> Khalti Payment Gateway for Flutter </p> <p> </p>"},{"location":"checkout/flutter/khalti-checkout/#introduction","title":"Introduction","text":"<p>Read the introduction here.</p>"},{"location":"checkout/flutter/khalti-checkout/#getting-started","title":"Getting Started","text":"<p>Integrating Khalti Payment Gateway requires merchant account.  You can always create one easily from here.</p> <p>Tip</p> <p>A merchant account is required for integration.</p> <p>Access Information</p> <p>For Sandbox Access</p> <p>Signup from  here as a merchant.</p> <p>Please use 987654 as login OTP for sandbox env.</p> <p>For Production Access</p> <p>Please visit here</p> <p>Test Credentials for sandbox environment</p> <p>Test Khalti ID for 9800000000 9800000001 9800000002 9800000003 9800000004 9800000005</p> <p>Test MPIN 1111</p> <p>Test OTP 987654</p> <p>Read the steps to integrate Khalti Payment Gateway in details here.</p>"},{"location":"checkout/flutter/khalti-checkout/#supported-platforms","title":"Supported Platforms","text":"Android iOS Web Desktop (macOS, Linux, Windows) \u2714\ufe0f \u2714\ufe0f \u274c \u274c"},{"location":"checkout/flutter/khalti-checkout/#setup","title":"Setup","text":"<p>Detailed setup for each platform.</p>"},{"location":"checkout/flutter/khalti-checkout/#android","title":"Android","text":"<p>No configuration is required for android.</p>"},{"location":"checkout/flutter/khalti-checkout/#ios","title":"iOS","text":"<p>No configuration is required for iOS.</p>"},{"location":"checkout/flutter/khalti-checkout/#launching-payment-interface","title":"Launching Payment Interface","text":""},{"location":"checkout/flutter/khalti-checkout/#generating-the-pidx","title":"Generating the pidx","text":"<p>A unique product identifier <code>pidx</code> must be generated via a server side POST request before being able to proceed. Read here for information on how one can generate pidx along with other extra parameters.</p>"},{"location":"checkout/flutter/khalti-checkout/#khalti-initialization","title":"Khalti Initialization","text":"<p>Before being able to launch Khalti payment gateway, it is necessary to initialize <code>Khalti</code> object. The initialization can be done by a static <code>init()</code> method.</p> <p>It is suggested that the initialization be done inside the <code>initState</code> method of a <code>StatefulWidget</code>.</p> <pre><code>class KhaltiSDKDemo extends StatefulWidget {\n  const KhaltiSDKDemo({super.key});\n\n  @override\n  State&lt;KhaltiSDKDemo&gt; createState() =&gt; _KhaltiSDKDemoState();\n}\n\nclass _KhaltiSDKDemoState extends State&lt;KhaltiSDKDemo&gt; {\n  late final Future&lt;Khalti&gt; khalti;\n\n  @override\n  void initState() {\n    super.initState();\n    final payConfig = KhaltiPayConfig(\n      publicKey: '__live_public_key__', // Merchant's public key\n      pidx: pidx, // This should be generated via a server side POST request.\n      environment: Environment.prod,\n    );\n\n    khalti = Khalti.init(\n      enableDebugging: true,\n      payConfig: payConfig,\n      onPaymentResult: (paymentResult, khalti) {\n        log(paymentResult.toString());\n      },\n      onMessage: (\n        khalti, {\n        description,\n        statusCode,\n        event,\n        needsPaymentConfirmation,\n      }) async {\n        log(\n          'Description: $description, Status Code: $statusCode, Event: $event, NeedsPaymentConfirmation: $needsPaymentConfirmation',\n        );\n      },\n      onReturn: () =&gt; log('Successfully redirected to return_url.'),\n    );\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    // Rest of the code\n  }\n}\n</code></pre> <p>BREAKING CHANGE</p> <p>Starting with version <code>1.0.0-dev.5</code>, it is no longer necessary for the developers to manually add <code>return_url</code> within <code>KhaltiPayConfig</code>. The SDK handles the fetching and proper usage of <code>return_url</code>.</p> <p>The static <code>init()</code> method takes in a few arguments:</p> <ul> <li>enableDebugging: A boolean argument that is when set to true can be used to view network logs in the debug console. It is set to <code>false</code> by default.</li> <li> <p>payConfig: An instance of <code>KhaltiPayConfig()</code>. It is used to set few config data. The instance of <code>KhaltiPayConfig</code> takes in few arguments:</p> <pre><code>final payConfig = KhaltiPayConfig(\n  publicKey: '__live_public_key__', // Merchant's public key\n  pidx: pidx, // This should be generated via a server side POST request.\n  environment: Environment.prod,\n);\n</code></pre> <ul> <li>publicKey: Merchant's live or test public key provided by Khalti.</li> <li>pidx: Unique product identifier received after initiating the payment via a server-side POST request.</li> <li>environment: An enum that determines whether test API or production API should be invoked. Can be either <code>Environment.prod</code> or <code>Environment.test</code>. Set to <code>Environment.prod</code> by default.</li> </ul> </li> <li> <p>onPaymentResult: A callback function that is triggered if the payment is successfully made and redirected to merchant's return URL. The callback takes in two arguments.</p> <ul> <li>paymentResult: An instance of <code>PaymentResult</code> class. It provides some informations about the payment after it is successfully made. Following data is provided by this instance.<ul> <li>payload: An instance of <code>PaymentPayload</code>. It contains general informations such as <code>pidx</code>, <code>totalAmount</code>, <code>transactionId</code>, <code>status</code>, <code>fee</code>, <code>refunded</code>, <code>purchaseOrderId</code>, <code>purchaseOrderName</code> and <code>extraMerchantParams</code> regarding the payment made. </li> </ul> </li> <li>khalti: An instance of <code>Khalti</code>. Can be used to invoke any methods provided by this instance.</li> </ul> <pre><code>onPaymentResult(paymentResult, khalti) {\n  print(paymentResult.payload?.status);\n  print(paymentResult.payload?.pidx);\n  print(paymentResult.payload?.totalAmount);\n  print(paymentResult.payload?.transactionId);\n}\n</code></pre> </li> <li> <p>onReturn: A callback function that gets triggered when the return_url is successfully loaded.</p> </li> <li> <p>onMessage: A callback function that is triggered to convey any message. It gets triggered when any issue is encountered or when any general message is to be conveyed. In case of error, this callback provides error informations such as error description and status code. It also provides information about why the error occured via <code>KhaltiEvent</code> enum. This enum consists of:</p> <p><pre><code>enum KhaltiEvent {\n  /// Event for when khalti payment page is disposed.\n  kpgDisposed,\n\n  /// Event for when return url fails to load from the API.\n  returnUrlLoadFailure,\n\n  /// Event for when there's an exception when making a network call.\n  networkFailure,\n\n  /// Event for when there's a HTTP failure when making a network call for verifying payment status.\n  paymentLookupfailure,\n\n  /// An unknown event.\n  unknown\n}\n</code></pre>   Additionally, it also provides a bool <code>needsPaymentConfirmation</code> which needs to be checked. If it is true, developers should invoke payment confirmation API that is provided by the SDK to confirm the status of their payment. The callback also provides the instance of <code>Khalti</code>.</p> <pre><code>onMessage: (\n  khalti, {\n  description,\n  statusCode,\n  event,\n  needsPaymentConfirmation,\n}) {\n  log('Description: $description, Status Code: $statusCode, Event: $event, NeedsPaymentConfirmation: $needsPaymentConfirmation');\n}\n</code></pre> </li> </ul>"},{"location":"checkout/flutter/khalti-checkout/#loading-payment-interface","title":"Loading payment interface","text":"<p>The SDK internally uses flutter_inappwebview to load the khalti payment gateway. SDK users should invoke <code>open()</code> method provided by the SDK to push a new page in their route.</p> <pre><code>khalti.open(context); // Assuming that khalti is a variable that holds the instance of `Khalti`.\n</code></pre>"},{"location":"checkout/flutter/khalti-checkout/#payment-verification-api","title":"Payment verification API","text":"<p>A payment verification API that confirms the status of the payment made, is already called by the SDK internally. However, if the users receive <code>needsPaymentConfirmation</code> as true in <code>onMessage</code> callback, they are supposed to called the payment verification API manually to be sure about the payment status. It can be done with a method provided by the <code>Khalti</code> instance.</p> <pre><code>await khalti.verify(); // Assuming that khalti is a variable that holds the instance of `Khalti`.\n</code></pre> <p>The instance of <code>Khalti</code> is provided in the <code>onPaymentResult</code> and <code>onMessage</code> callback which can be used to invoke any public functions provide by <code>Khalti</code> class.</p>"},{"location":"checkout/flutter/khalti-checkout/#closing-the-khalti-payment-gateway-page","title":"Closing the Khalti payment gateway page","text":"<p>After payment is successfully made, developers can opt to pop the page that was pushed in their route. The SDK provides a <code>close()</code> method.</p> <pre><code>khalti.close(context);\n</code></pre>"},{"location":"checkout/flutter/khalti-checkout/#example","title":"Example","text":"<p>For a more detailed example, check the examples directory inside <code>khalti_flutter</code> package.</p>"},{"location":"checkout/flutter/khalti-checkout/#changelog","title":"Changelog","text":""},{"location":"plugins/magneto/","title":"Magneto","text":"<p>This is Khalti Payment Gateway plugin for Magneto 2.</p> <p>Check out the source for Khalti plugin on Github.</p>"},{"location":"plugins/magneto/#installation","title":"Installation","text":"<ul> <li>Create the following folder structure inside \"app\" folder and copy all the files   \"Fourwallsinn/Khalti\"</li> <li>After you have copied all the files the folder structure should be like this   \"app/code/Fourwallsinn/Khalti/UPLOADED_FILES\"</li> <li>Run the following CLI commands to complete the Plugin Installation   <code>php bin/magento setup:upgrade</code></li> <li>If you are on Production Environment, make sure you run the following command as well   <code>php bin/magento setup:static-content:deploy</code></li> </ul>"},{"location":"plugins/opencart/","title":"Opencart","text":"<p>This is Khalti Payment Gateway extension for Opencart.</p> <p>Check out the source for Khalti plugin on Github.</p>"},{"location":"plugins/opencart/#installation","title":"Installation","text":"<p>The basic steps to follow:</p> <ul> <li>Go to <code>Extension &gt; Installer</code> in your admin dashboard</li> <li>Upload the zip file of module (link)</li> </ul> <p></p> <ul> <li>Now after successful upload go to <code>Extensions &gt; Extensions</code></li> <li>Choose <code>Payment</code> on extension type section you will get a list with Khalti in it.</li> <li>Select to edit button. You will see fields as below.</li> </ul> <p></p> <ul> <li>Set <code>Test mode</code> to Yes and Status to Enabled. Enter your test public key and test secret key in respective fields and save. You can get keys from <code>Keys</code> section in your merchant dashboard</li> </ul> <p></p> <ul> <li>After successful upload go to <code>Design &gt; Theme Editor</code> in dashboard side nav</li> <li>Select <code>common &gt; header.twig</code> from <code>Choose a template</code> section <pre><code>&lt;script  \"https://khalti.com/static/khalti-checkout.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre></li> <li>Add above line  in <code>header.twig</code> and save.</li> </ul> <p></p> <p>you may need to manage permission of your project folders</p> <p>if downloaded zip is not compatible try compressing to zip after you uncompressing it</p>"},{"location":"plugins/opencart/#manual-installation","title":"Manual Installation","text":"<ul> <li>Extract the zip file.</li> <li>Copy all files on the root directory of project</li> <li>add script with src \"https://khalti.com/static/khalti-checkout.js\" on your themes header file which is located on \"catalog/view/theme/YOUR_THEME_NAME/common/header.twig</li> <li>clear Opencart cache</li> </ul>"},{"location":"plugins/opencart/#testing","title":"Testing","text":"<ul> <li>Before testing set default currency to Nepalese Rupee. (How)</li> <li>Go to your shop and complete a transaction from Wallet payment type.</li> </ul>"},{"location":"plugins/opencart/#deploy","title":"Deploy","text":"<ul> <li>If a test is passed successfully, go to keys section in your merchant dashboard. You will get your Live keys there.</li> <li>Uncheck the Test Mode and enter your public and secret keys in respective fields</li> <li>Finally save the changes.</li> </ul>"},{"location":"plugins/prestashop/","title":"Prestashop","text":"<p>This is our add-on module for PrestaShop, a open source e-commerce solution.</p> <p>Check out the source for Khalti plugin on Github.</p>"},{"location":"plugins/whmcs/","title":"Official Khalti module for WHMCS","text":"<p>This is third party gateway modules to integrate Khalti payment solution with the WHMCS platform.</p>"},{"location":"plugins/whmcs/#installation","title":"Installation","text":"<ol> <li>Download the ZIP (or tar.gz) file from the releases See the releases</li> <li>Simply extract at the root folder of your WHMCS installation. Following files will be copied</li> </ol>"},{"location":"plugins/whmcs/#file-structure","title":"File Structure","text":"<p><pre><code>modules /\n | gateways /\n   | khaltigateway.php\n   | callback /\n       | khaltigateway.php\n   | khaltigateway /\n      | common.php\n      | index.php\n      | init.php\n      | step2.php\n</code></pre>    (Basically, the plugin creates    - file khaltigateway.php under modules/gateways directory of your root installation,    - directory khaltigateway/ under modules/gateways directory of your root installation    - file khaltigateway.php under modules/gateways/callback directory of your root installation. (This file is kept just to maintain the convention that WHMCS suggests)</p>"},{"location":"plugins/whmcs/#activate","title":"Activate","text":"<p>Login to admin area of your WHMCS installation and enable the gateway from <code>Setup -&gt; Payments -&gt; Payment Gateways</code> (Refer to the image below) </p>"},{"location":"plugins/whmcs/#configure","title":"Configure","text":"<p>Once the gateway is enabled, the gateway parameters need to be configured. (Refer to the image below)  PS: Please make sure that the currency \"NPR\" is selected for the option \"Convert to For Processing\"</p>"},{"location":"plugins/woocommerce/","title":"WooCommerce","text":"<p>This is Khalti Payment Gateway extension for WooCommerce. Check out the source for Khalti plugin on Github.</p>"},{"location":"plugins/woocommerce/#installation","title":"Installation","text":"<p>The basic steps to follow:</p> <ul> <li>Go to the plugin section in your WordPress admin dashboard</li> <li>Click on Add New and upload the zip file of Khalti WooCommerce plugin (link) and upload it or search Khalti in search</li> </ul> <p></p> <ul> <li>After installation is complete, go to <code>WooCommerce &gt; Settings</code></li> <li>Go to <code>Payments</code> option where you can find Khalti among other payment gateways</li> <li>Click on Khalti option and enter your live secret key in respective fields. You can get keys from <code>Keys</code> section in your merchant dashboard here</li> </ul> <p></p> <ul> <li>Click on save changes</li> </ul>"},{"location":"plugins/woocommerce/#testing","title":"Testing","text":"<ul> <li>Should enable khalti and Sandbox Mode as shown in above example.</li> <li>Currency should be Nepalese Rupee. (How)</li> <li>Go to your shop and complete a transaction from Wallet payment type.</li> </ul>"},{"location":"plugins/woocommerce/#deploy","title":"Deploy","text":"<ul> <li>If you complete the test, Go to keys section in your merchant account, you can get your Live keys (here)</li> <li>Uncheck the Sandbox Mode and enter your secret key in respective fields</li> </ul> <ul> <li>Finally save the changes.</li> </ul>"}]}